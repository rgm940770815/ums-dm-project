<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.net.withub.ums.dao.UmsUserInfoMapper">
    <resultMap id="BaseResultMap" type="cn.net.withub.ums.entity.UmsUserInfo">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="court_no" jdbcType="INTEGER" property="courtNo"/>
        <result column="user_no" jdbcType="INTEGER" property="userNo"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="user_code" jdbcType="VARCHAR" property="userCode"/>
        <result column="user_type" jdbcType="INTEGER" property="userType"/>
        <result column="C_CODE_JG1" jdbcType="VARCHAR" property="cCodeJg1"/>
        <result column="C_CODE_JG2" jdbcType="VARCHAR" property="cCodeJg2"/>
        <result column="C_CODE_JG3" jdbcType="VARCHAR" property="cCodeJg3"/>
        <result column="fullname" jdbcType="VARCHAR" property="fullname"/>
        <result column="former_name" jdbcType="VARCHAR" property="formerName"/>
        <result column="gender" jdbcType="INTEGER" property="gender"/>
        <result column="department" jdbcType="INTEGER" property="department"/>
        <result column="unicode" jdbcType="INTEGER" property="unicode"/>
        <result column="position_nature" jdbcType="INTEGER" property="positionNature"/>
        <result column="hometown" jdbcType="VARCHAR" property="hometown"/>
        <result column="birthplace" jdbcType="VARCHAR" property="birthplace"/>
        <result column="birthday" jdbcType="DATE" property="birthday"/>
        <result column="physical_condition" jdbcType="INTEGER" property="physicalCondition"/>
        <result column="marital_status" jdbcType="INTEGER" property="maritalStatus"/>
        <result column="nation" jdbcType="INTEGER" property="nation"/>
        <result column="idcard" jdbcType="VARCHAR" property="idcard"/>
        <result column="preparation" jdbcType="INTEGER" property="preparation"/>
        <result column="position_type" jdbcType="INTEGER" property="positionType"/>
        <result column="position_type_date" jdbcType="DATE" property="positionTypeDate"/>
        <result column="assign" jdbcType="INTEGER" property="assign"/>
        <result column="education_background" jdbcType="INTEGER" property="educationBackground"/>
        <result column="major" jdbcType="INTEGER" property="major"/>
        <result column="degree" jdbcType="INTEGER" property="degree"/>
        <result column="degree_date" jdbcType="DATE" property="degreeDate"/>
        <result column="work_date" jdbcType="DATE" property="workDate"/>
        <result column="enter_date" jdbcType="DATE" property="enterDate"/>
        <result column="pro_cert" jdbcType="INTEGER" property="proCert"/>
        <result column="pro_cert_date" jdbcType="DATE" property="proCertDate"/>
        <result column="political" jdbcType="INTEGER" property="political"/>
        <result column="political_date" jdbcType="DATE" property="politicalDate"/>
        <result column="politic_law_work_date" jdbcType="DATE" property="politicLawWorkDate"/>
        <result column="administration_position" jdbcType="INTEGER" property="administrationPosition"/>
        <result column="administration_position_date" jdbcType="DATE" property="administrationPositionDate"/>
        <result column="law_position" jdbcType="INTEGER" property="lawPosition"/>
        <result column="law_position_date" jdbcType="DATE" property="lawPositionDate"/>
        <result column="is_parttime_presiding_judge" jdbcType="INTEGER" property="isParttimePresidingJudge"/>
        <result column="party_office" jdbcType="INTEGER" property="partyOffice"/>
        <result column="party_office_date" jdbcType="DATE" property="partyOfficeDate"/>
        <result column="lawyer_date" jdbcType="DATE" property="lawyerDate"/>
        <result column="extra_seniority" jdbcType="INTEGER" property="extraSeniority"/>
        <result column="deduction_seniority" jdbcType="INTEGER" property="deductionSeniority"/>
        <result column="before_court_work_year" jdbcType="INTEGER" property="beforeCourtWorkYear"/>
        <result column="rank" jdbcType="INTEGER" property="rank"/>
        <result column="rank_date" jdbcType="DATE" property="rankDate"/>
        <result column="level" jdbcType="INTEGER" property="level"/>
        <result column="level_date" jdbcType="DATE" property="levelDate"/>
        <result column="enter_way" jdbcType="INTEGER" property="enterWay"/>
        <result column="enter_source" jdbcType="INTEGER" property="enterSource"/>
        <result column="former_post" jdbcType="INTEGER" property="formerPost"/>
        <result column="former_rank" jdbcType="INTEGER" property="formerRank"/>
        <result column="former_unit" jdbcType="VARCHAR" property="formerUnit"/>
        <result column="verify_date" jdbcType="DATE" property="verifyDate"/>
        <result column="leave_reason" jdbcType="INTEGER" property="leaveReason"/>
        <result column="leave_date" jdbcType="DATE" property="leaveDate"/>
        <result column="leave_destination" jdbcType="INTEGER" property="leaveDestination"/>
        <result column="sort_no" jdbcType="INTEGER" property="sortNo"/>
        <result column="is_valid" jdbcType="INTEGER" property="isValid"/>
        <result column="additional_duration" jdbcType="INTEGER" property="additionalDuration"/>
        <result column="lawyer_cert_date" jdbcType="DATE" property="lawyerCertDate"/>
        <result column="servant_level" jdbcType="INTEGER" property="servantLevel"/>
        <result column="servant_level_date" jdbcType="DATE" property="servantLevelDate"/>
        <result column="lawyer_cert" jdbcType="INTEGER" property="lawyerCert"/>
        <result column="court_code" jdbcType="VARCHAR" property="courtCode"/>
        <result column="order_no" jdbcType="INTEGER" property="orderNo"/>
        <result column="court_std_no" jdbcType="INTEGER" property="courtStdNo"/>
        <result column="uk_no" jdbcType="VARCHAR" property="ukNo"/>
        <result column="work_no" jdbcType="VARCHAR" property="workNo"/>
        <result column="fanka_no" jdbcType="VARCHAR" property="fankaNo"/>
        <result column="official_no" jdbcType="VARCHAR" property="officialNo"/>
        <result column="update_user" jdbcType="VARCHAR" property="updateUser"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="dept_org_code" jdbcType="VARCHAR" property="deptOrgCode"/>
        <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber"/>
        <result column="machine_number" jdbcType="VARCHAR" property="machineNumber"/>
        <result column="local_address" jdbcType="VARCHAR" property="localAddress"/>
        <result column="province" jdbcType="INTEGER" property="province"/>
        <result column="city" jdbcType="INTEGER" property="city"/>
        <result column="area" jdbcType="INTEGER" property="area"/>
        <result column="postal_address" jdbcType="VARCHAR" property="postalAddress"/>
        <result column="c_ps_xlxw" jdbcType="INTEGER" property="cPsXlxw"/>
        <result column="s_ps_byyxjzy" jdbcType="VARCHAR" property="sPsByyxjzy"/>
        <result column="s_ps_dwdz" jdbcType="VARCHAR" property="sPsDwdz"/>
        <result column="s_ps_zw" jdbcType="VARCHAR" property="sPsZw"/>
        <result column="s_ps_zj" jdbcType="VARCHAR" property="sPsZj"/>
        <result column="s_ps_zyjszw" jdbcType="VARCHAR" property="sPsZyjszw"/>
        <result column="c_ps_lx" jdbcType="INTEGER" property="cPsLx"/>
        <result column="c_ps_zylb" jdbcType="INTEGER" property="cPsZylb"/>
        <result column="s_ps_rmdw" jdbcType="VARCHAR" property="sPsRmdw"/>
        <result column="s_ps_rmrq" jdbcType="DATE" property="sPsRmrq"/>
        <result column="s_ps_psybh" jdbcType="VARCHAR" property="sPsPsybh"/>
        <result column="s_ps_mzrq" jdbcType="DATE" property="sPsMzrq"/>
        <result column="c_ps_mzyy" jdbcType="INTEGER" property="cPsMzyy"/>
        <result column="ukbm" jdbcType="VARCHAR" property="ukbm"/>
        <result column="zytc" jdbcType="VARCHAR" property="zytc"/>
        <result column="s_ps_zy" jdbcType="VARCHAR" property="sPsZy"/>
        <result column="begin_time" jdbcType="DATE" property="beginTime"/>
        <result column="end_time" jdbcType="DATE" property="endTime"/>
        <result column="is_info_complete" jdbcType="INTEGER" property="isInfoComplete"/>
        <result column="salt" jdbcType="VARCHAR" property="salt"/>
        <result column="data_type" jdbcType="INTEGER" property="dataType"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="office_phone" jdbcType="VARCHAR" property="officePhone"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="yefg" jdbcType="INTEGER" property="yefg"/>
        <result column="ext_office_phone" jdbcType="VARCHAR" property="extOfficePhone"/>
        <result column="ext_tax" jdbcType="VARCHAR" property="extTax"/>
        <result column="ext_address" jdbcType="VARCHAR" property="extAddress"/>
        <result column="ext_zip_code" jdbcType="VARCHAR" property="extZipCode"/>
        <result column="bzxx" jdbcType="VARCHAR" property="bzxx"/>
        <result column="job" jdbcType="VARCHAR" property="job"/>
        <result column="personnel_classification" jdbcType="VARCHAR" property="personnelClassification"/>
        <result column="nation_report" jdbcType="VARCHAR" property="nationReport"/>
        <result column="education_background_report" jdbcType="VARCHAR" property="educationBackgroundReport"/>
        <result column="administration_position_report" jdbcType="VARCHAR" property="administrationPositionReport"/>
        <result column="law_position_report" jdbcType="VARCHAR" property="lawPositionReport"/>
        <result column="rank_report" jdbcType="VARCHAR" property="rankReport"/>
        <result column="political_report" jdbcType="VARCHAR" property="politicalReport"/>
        <result column="party_office_report" jdbcType="VARCHAR" property="partyOfficeReport"/>
        <result column="bzcy" jdbcType="INTEGER" property="bzcy"/>
        <result column="assess_type" jdbcType="INTEGER" property="assessType"/>
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List">
        id, court_no, user_no, username, password, user_code, user_type, C_CODE_JG1, C_CODE_JG2,
    C_CODE_JG3, fullname, former_name, gender, department, unicode, position_nature, 
    hometown, birthplace, birthday, physical_condition, marital_status, nation, idcard, 
    preparation, position_type, position_type_date, assign, education_background, major, 
    degree, degree_date, work_date, enter_date, pro_cert, pro_cert_date, political, political_date, 
    politic_law_work_date, administration_position, administration_position_date, law_position, 
    law_position_date, is_parttime_presiding_judge, party_office, party_office_date, 
    lawyer_date, extra_seniority, deduction_seniority, before_court_work_year, rank, 
    rank_date, level, level_date, enter_way, enter_source, former_post, former_rank, 
    former_unit, verify_date, leave_reason, leave_date, leave_destination, sort_no, is_valid, 
    additional_duration, lawyer_cert_date, servant_level, servant_level_date, lawyer_cert, 
    court_code, order_no, court_std_no, uk_no, work_no, fanka_no, official_no, update_user, 
    update_time, dept_org_code, phone_number, machine_number, local_address, province, 
    city, area, postal_address, c_ps_xlxw, s_ps_byyxjzy, s_ps_dwdz, s_ps_zw, s_ps_zj, 
    s_ps_zyjszw, c_ps_lx, c_ps_zylb, s_ps_rmdw, s_ps_rmrq, s_ps_psybh, s_ps_mzrq, c_ps_mzyy, 
    ukbm, zytc, s_ps_zy, begin_time, end_time, is_info_complete, salt, data_type, user_id, 
    office_phone, phone, yefg, ext_office_phone, ext_tax, ext_address, ext_zip_code, 
    bzxx, job, personnel_classification, nation_report, education_background_report, 
    administration_position_report, law_position_report, rank_report, political_report, 
    party_office_report, bzcy,assess_type
    </sql>
    <select id="selectByExample" parameterType="cn.net.withub.ums.entity.UmsUserInfoCriteria" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from ums_user_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ums_user_info
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from ums_user_info
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="cn.net.withub.ums.entity.UmsUserInfoCriteria">
        delete from ums_user_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.net.withub.ums.entity.UmsUserInfo">
        insert into ums_user_info (id, court_no, user_no,
                                   username, password, user_code,
                                   user_type, C_CODE_JG1, C_CODE_JG2,
                                   C_CODE_JG3, fullname, former_name,
                                   gender, department, unicode,
                                   position_nature, hometown, birthplace,
                                   birthday, physical_condition, marital_status,
                                   nation, idcard, preparation,
                                   position_type, position_type_date, assign,
                                   education_background, major, degree,
                                   degree_date, work_date, enter_date,
                                   pro_cert, pro_cert_date, political,
                                   political_date, politic_law_work_date, administration_position,
                                   administration_position_date, law_position, law_position_date,
                                   is_parttime_presiding_judge, party_office,
                                   party_office_date, lawyer_date, extra_seniority,
                                   deduction_seniority, before_court_work_year,
                                   rank, rank_date, level,
                                   level_date, enter_way, enter_source,
                                   former_post, former_rank, former_unit,
                                   verify_date, leave_reason, leave_date,
                                   leave_destination, sort_no, is_valid,
                                   additional_duration, lawyer_cert_date, servant_level,
                                   servant_level_date, lawyer_cert, court_code,
                                   order_no, court_std_no, uk_no,
                                   work_no, fanka_no, official_no,
                                   update_user, update_time, dept_org_code,
                                   phone_number, machine_number, local_address,
                                   province, city, area,
                                   postal_address, c_ps_xlxw, s_ps_byyxjzy,
                                   s_ps_dwdz, s_ps_zw, s_ps_zj,
                                   s_ps_zyjszw, c_ps_lx, c_ps_zylb,
                                   s_ps_rmdw, s_ps_rmrq, s_ps_psybh,
                                   s_ps_mzrq, c_ps_mzyy, ukbm,
                                   zytc, s_ps_zy, begin_time,
                                   end_time, is_info_complete, salt,
                                   data_type, user_id, office_phone,
                                   phone, yefg, ext_office_phone,
                                   ext_tax, ext_address, ext_zip_code,
                                   bzxx, job, personnel_classification,
                                   nation_report, education_background_report,
                                   administration_position_report, law_position_report,
                                   rank_report, political_report, party_office_report,
                                   bzcy)
        values (#{id,jdbcType=VARCHAR}, #{courtNo,jdbcType=INTEGER}, #{userNo,jdbcType=INTEGER},
                #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{userCode,jdbcType=VARCHAR},
                #{userType,jdbcType=INTEGER}, #{cCodeJg1,jdbcType=VARCHAR}, #{cCodeJg2,jdbcType=VARCHAR},
                #{cCodeJg3,jdbcType=VARCHAR}, #{fullname,jdbcType=VARCHAR}, #{formerName,jdbcType=VARCHAR},
                #{gender,jdbcType=INTEGER}, #{department,jdbcType=INTEGER}, #{unicode,jdbcType=INTEGER},
                #{positionNature,jdbcType=INTEGER}, #{hometown,jdbcType=VARCHAR}, #{birthplace,jdbcType=VARCHAR},
                #{birthday,jdbcType=DATE}, #{physicalCondition,jdbcType=INTEGER}, #{maritalStatus,jdbcType=INTEGER},
                #{nation,jdbcType=INTEGER}, #{idcard,jdbcType=VARCHAR}, #{preparation,jdbcType=INTEGER},
                #{positionType,jdbcType=INTEGER}, #{positionTypeDate,jdbcType=DATE}, #{assign,jdbcType=INTEGER},
                #{educationBackground,jdbcType=INTEGER}, #{major,jdbcType=INTEGER}, #{degree,jdbcType=INTEGER},
                #{degreeDate,jdbcType=DATE}, #{workDate,jdbcType=DATE}, #{enterDate,jdbcType=DATE},
                #{proCert,jdbcType=INTEGER}, #{proCertDate,jdbcType=DATE}, #{political,jdbcType=INTEGER},
                #{politicalDate,jdbcType=DATE}, #{politicLawWorkDate,jdbcType=DATE},
                #{administrationPosition,jdbcType=INTEGER},
                #{administrationPositionDate,jdbcType=DATE}, #{lawPosition,jdbcType=INTEGER},
                #{lawPositionDate,jdbcType=DATE},
                #{isParttimePresidingJudge,jdbcType=INTEGER}, #{partyOffice,jdbcType=INTEGER},
                #{partyOfficeDate,jdbcType=DATE}, #{lawyerDate,jdbcType=DATE}, #{extraSeniority,jdbcType=INTEGER},
                #{deductionSeniority,jdbcType=INTEGER}, #{beforeCourtWorkYear,jdbcType=INTEGER},
                #{rank,jdbcType=INTEGER}, #{rankDate,jdbcType=DATE}, #{level,jdbcType=INTEGER},
                #{levelDate,jdbcType=DATE}, #{enterWay,jdbcType=INTEGER}, #{enterSource,jdbcType=INTEGER},
                #{formerPost,jdbcType=INTEGER}, #{formerRank,jdbcType=INTEGER}, #{formerUnit,jdbcType=VARCHAR},
                #{verifyDate,jdbcType=DATE}, #{leaveReason,jdbcType=INTEGER}, #{leaveDate,jdbcType=DATE},
                #{leaveDestination,jdbcType=INTEGER}, #{sortNo,jdbcType=INTEGER}, #{isValid,jdbcType=INTEGER},
                #{additionalDuration,jdbcType=INTEGER}, #{lawyerCertDate,jdbcType=DATE},
                #{servantLevel,jdbcType=INTEGER},
                #{servantLevelDate,jdbcType=DATE}, #{lawyerCert,jdbcType=INTEGER}, #{courtCode,jdbcType=VARCHAR},
                #{orderNo,jdbcType=INTEGER}, #{courtStdNo,jdbcType=INTEGER}, #{ukNo,jdbcType=VARCHAR},
                #{workNo,jdbcType=VARCHAR}, #{fankaNo,jdbcType=VARCHAR}, #{officialNo,jdbcType=VARCHAR},
                #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{deptOrgCode,jdbcType=VARCHAR},
                #{phoneNumber,jdbcType=VARCHAR}, #{machineNumber,jdbcType=VARCHAR}, #{localAddress,jdbcType=VARCHAR},
                #{province,jdbcType=INTEGER}, #{city,jdbcType=INTEGER}, #{area,jdbcType=INTEGER},
                #{postalAddress,jdbcType=VARCHAR}, #{cPsXlxw,jdbcType=INTEGER}, #{sPsByyxjzy,jdbcType=VARCHAR},
                #{sPsDwdz,jdbcType=VARCHAR}, #{sPsZw,jdbcType=VARCHAR}, #{sPsZj,jdbcType=VARCHAR},
                #{sPsZyjszw,jdbcType=VARCHAR}, #{cPsLx,jdbcType=INTEGER}, #{cPsZylb,jdbcType=INTEGER},
                #{sPsRmdw,jdbcType=VARCHAR}, #{sPsRmrq,jdbcType=DATE}, #{sPsPsybh,jdbcType=VARCHAR},
                #{sPsMzrq,jdbcType=DATE}, #{cPsMzyy,jdbcType=INTEGER}, #{ukbm,jdbcType=VARCHAR},
                #{zytc,jdbcType=VARCHAR}, #{sPsZy,jdbcType=VARCHAR}, #{beginTime,jdbcType=DATE},
                #{endTime,jdbcType=DATE}, #{isInfoComplete,jdbcType=INTEGER}, #{salt,jdbcType=VARCHAR},
                #{dataType,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{officePhone,jdbcType=VARCHAR},
                #{phone,jdbcType=VARCHAR}, #{yefg,jdbcType=INTEGER}, #{extOfficePhone,jdbcType=VARCHAR},
                #{extTax,jdbcType=VARCHAR}, #{extAddress,jdbcType=VARCHAR}, #{extZipCode,jdbcType=VARCHAR},
                #{bzxx,jdbcType=VARCHAR}, #{job,jdbcType=VARCHAR}, #{personnelClassification,jdbcType=VARCHAR},
                #{nationReport,jdbcType=VARCHAR}, #{educationBackgroundReport,jdbcType=VARCHAR},
                #{administrationPositionReport,jdbcType=VARCHAR}, #{lawPositionReport,jdbcType=VARCHAR},
                #{rankReport,jdbcType=VARCHAR}, #{politicalReport,jdbcType=VARCHAR},
                #{partyOfficeReport,jdbcType=VARCHAR},
                #{bzcy,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="cn.net.withub.ums.entity.UmsUserInfo">
        insert into ums_user_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="courtNo != null">
                court_no,
            </if>
            <if test="userNo != null">
                user_no,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="userCode != null">
                user_code,
            </if>
            <if test="userType != null">
                user_type,
            </if>
            <if test="cCodeJg1 != null">
                C_CODE_JG1,
            </if>
            <if test="cCodeJg2 != null">
                C_CODE_JG2,
            </if>
            <if test="cCodeJg3 != null">
                C_CODE_JG3,
            </if>
            <if test="fullname != null">
                fullname,
            </if>
            <if test="formerName != null">
                former_name,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="department != null">
                department,
            </if>
            <if test="unicode != null">
                unicode,
            </if>
            <if test="positionNature != null">
                position_nature,
            </if>
            <if test="hometown != null">
                hometown,
            </if>
            <if test="birthplace != null">
                birthplace,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="physicalCondition != null">
                physical_condition,
            </if>
            <if test="maritalStatus != null">
                marital_status,
            </if>
            <if test="nation != null">
                nation,
            </if>
            <if test="idcard != null">
                idcard,
            </if>
            <if test="preparation != null">
                preparation,
            </if>
            <if test="positionType != null">
                position_type,
            </if>
            <if test="positionTypeDate != null">
                position_type_date,
            </if>
            <if test="assign != null">
                assign,
            </if>
            <if test="educationBackground != null">
                education_background,
            </if>
            <if test="major != null">
                major,
            </if>
            <if test="degree != null">
                degree,
            </if>
            <if test="degreeDate != null">
                degree_date,
            </if>
            <if test="workDate != null">
                work_date,
            </if>
            <if test="enterDate != null">
                enter_date,
            </if>
            <if test="proCert != null">
                pro_cert,
            </if>
            <if test="proCertDate != null">
                pro_cert_date,
            </if>
            <if test="political != null">
                political,
            </if>
            <if test="politicalDate != null">
                political_date,
            </if>
            <if test="politicLawWorkDate != null">
                politic_law_work_date,
            </if>
            <if test="administrationPosition != null">
                administration_position,
            </if>
            <if test="administrationPositionDate != null">
                administration_position_date,
            </if>
            <if test="lawPosition != null">
                law_position,
            </if>
            <if test="lawPositionDate != null">
                law_position_date,
            </if>
            <if test="isParttimePresidingJudge != null">
                is_parttime_presiding_judge,
            </if>
            <if test="partyOffice != null">
                party_office,
            </if>
            <if test="partyOfficeDate != null">
                party_office_date,
            </if>
            <if test="lawyerDate != null">
                lawyer_date,
            </if>
            <if test="extraSeniority != null">
                extra_seniority,
            </if>
            <if test="deductionSeniority != null">
                deduction_seniority,
            </if>
            <if test="beforeCourtWorkYear != null">
                before_court_work_year,
            </if>
            <if test="rank != null">
                rank,
            </if>
            <if test="rankDate != null">
                rank_date,
            </if>
            <if test="level != null">
                level,
            </if>
            <if test="levelDate != null">
                level_date,
            </if>
            <if test="enterWay != null">
                enter_way,
            </if>
            <if test="enterSource != null">
                enter_source,
            </if>
            <if test="formerPost != null">
                former_post,
            </if>
            <if test="formerRank != null">
                former_rank,
            </if>
            <if test="formerUnit != null">
                former_unit,
            </if>
            <if test="verifyDate != null">
                verify_date,
            </if>
            <if test="leaveReason != null">
                leave_reason,
            </if>
            <if test="leaveDate != null">
                leave_date,
            </if>
            <if test="leaveDestination != null">
                leave_destination,
            </if>
            <if test="sortNo != null">
                sort_no,
            </if>
            <if test="isValid != null">
                is_valid,
            </if>
            <if test="additionalDuration != null">
                additional_duration,
            </if>
            <if test="lawyerCertDate != null">
                lawyer_cert_date,
            </if>
            <if test="servantLevel != null">
                servant_level,
            </if>
            <if test="servantLevelDate != null">
                servant_level_date,
            </if>
            <if test="lawyerCert != null">
                lawyer_cert,
            </if>
            <if test="courtCode != null">
                court_code,
            </if>
            <if test="orderNo != null">
                order_no,
            </if>
            <if test="courtStdNo != null">
                court_std_no,
            </if>
            <if test="ukNo != null">
                uk_no,
            </if>
            <if test="workNo != null">
                work_no,
            </if>
            <if test="fankaNo != null">
                fanka_no,
            </if>
            <if test="officialNo != null">
                official_no,
            </if>
            <if test="updateUser != null">
                update_user,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="deptOrgCode != null">
                dept_org_code,
            </if>
            <if test="phoneNumber != null">
                phone_number,
            </if>
            <if test="machineNumber != null">
                machine_number,
            </if>
            <if test="localAddress != null">
                local_address,
            </if>
            <if test="province != null">
                province,
            </if>
            <if test="city != null">
                city,
            </if>
            <if test="area != null">
                area,
            </if>
            <if test="postalAddress != null">
                postal_address,
            </if>
            <if test="cPsXlxw != null">
                c_ps_xlxw,
            </if>
            <if test="sPsByyxjzy != null">
                s_ps_byyxjzy,
            </if>
            <if test="sPsDwdz != null">
                s_ps_dwdz,
            </if>
            <if test="sPsZw != null">
                s_ps_zw,
            </if>
            <if test="sPsZj != null">
                s_ps_zj,
            </if>
            <if test="sPsZyjszw != null">
                s_ps_zyjszw,
            </if>
            <if test="cPsLx != null">
                c_ps_lx,
            </if>
            <if test="cPsZylb != null">
                c_ps_zylb,
            </if>
            <if test="sPsRmdw != null">
                s_ps_rmdw,
            </if>
            <if test="sPsRmrq != null">
                s_ps_rmrq,
            </if>
            <if test="sPsPsybh != null">
                s_ps_psybh,
            </if>
            <if test="sPsMzrq != null">
                s_ps_mzrq,
            </if>
            <if test="cPsMzyy != null">
                c_ps_mzyy,
            </if>
            <if test="ukbm != null">
                ukbm,
            </if>
            <if test="zytc != null">
                zytc,
            </if>
            <if test="sPsZy != null">
                s_ps_zy,
            </if>
            <if test="beginTime != null">
                begin_time,
            </if>
            <if test="endTime != null">
                end_time,
            </if>
            <if test="isInfoComplete != null">
                is_info_complete,
            </if>
            <if test="salt != null">
                salt,
            </if>
            <if test="dataType != null">
                data_type,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="officePhone != null">
                office_phone,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="yefg != null">
                yefg,
            </if>
            <if test="extOfficePhone != null">
                ext_office_phone,
            </if>
            <if test="extTax != null">
                ext_tax,
            </if>
            <if test="extAddress != null">
                ext_address,
            </if>
            <if test="extZipCode != null">
                ext_zip_code,
            </if>
            <if test="bzxx != null">
                bzxx,
            </if>
            <if test="job != null">
                job,
            </if>
            <if test="personnelClassification != null">
                personnel_classification,
            </if>
            <if test="nationReport != null">
                nation_report,
            </if>
            <if test="educationBackgroundReport != null">
                education_background_report,
            </if>
            <if test="administrationPositionReport != null">
                administration_position_report,
            </if>
            <if test="lawPositionReport != null">
                law_position_report,
            </if>
            <if test="rankReport != null">
                rank_report,
            </if>
            <if test="politicalReport != null">
                political_report,
            </if>
            <if test="partyOfficeReport != null">
                party_office_report,
            </if>
            <if test="bzcy != null">
                bzcy,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="courtNo != null">
                #{courtNo,jdbcType=INTEGER},
            </if>
            <if test="userNo != null">
                #{userNo,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="userCode != null">
                #{userCode,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                #{userType,jdbcType=INTEGER},
            </if>
            <if test="cCodeJg1 != null">
                #{cCodeJg1,jdbcType=VARCHAR},
            </if>
            <if test="cCodeJg2 != null">
                #{cCodeJg2,jdbcType=VARCHAR},
            </if>
            <if test="cCodeJg3 != null">
                #{cCodeJg3,jdbcType=VARCHAR},
            </if>
            <if test="fullname != null">
                #{fullname,jdbcType=VARCHAR},
            </if>
            <if test="formerName != null">
                #{formerName,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=INTEGER},
            </if>
            <if test="department != null">
                #{department,jdbcType=INTEGER},
            </if>
            <if test="unicode != null">
                #{unicode,jdbcType=INTEGER},
            </if>
            <if test="positionNature != null">
                #{positionNature,jdbcType=INTEGER},
            </if>
            <if test="hometown != null">
                #{hometown,jdbcType=VARCHAR},
            </if>
            <if test="birthplace != null">
                #{birthplace,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=DATE},
            </if>
            <if test="physicalCondition != null">
                #{physicalCondition,jdbcType=INTEGER},
            </if>
            <if test="maritalStatus != null">
                #{maritalStatus,jdbcType=INTEGER},
            </if>
            <if test="nation != null">
                #{nation,jdbcType=INTEGER},
            </if>
            <if test="idcard != null">
                #{idcard,jdbcType=VARCHAR},
            </if>
            <if test="preparation != null">
                #{preparation,jdbcType=INTEGER},
            </if>
            <if test="positionType != null">
                #{positionType,jdbcType=INTEGER},
            </if>
            <if test="positionTypeDate != null">
                #{positionTypeDate,jdbcType=DATE},
            </if>
            <if test="assign != null">
                #{assign,jdbcType=INTEGER},
            </if>
            <if test="educationBackground != null">
                #{educationBackground,jdbcType=INTEGER},
            </if>
            <if test="major != null">
                #{major,jdbcType=INTEGER},
            </if>
            <if test="degree != null">
                #{degree,jdbcType=INTEGER},
            </if>
            <if test="degreeDate != null">
                #{degreeDate,jdbcType=DATE},
            </if>
            <if test="workDate != null">
                #{workDate,jdbcType=DATE},
            </if>
            <if test="enterDate != null">
                #{enterDate,jdbcType=DATE},
            </if>
            <if test="proCert != null">
                #{proCert,jdbcType=INTEGER},
            </if>
            <if test="proCertDate != null">
                #{proCertDate,jdbcType=DATE},
            </if>
            <if test="political != null">
                #{political,jdbcType=INTEGER},
            </if>
            <if test="politicalDate != null">
                #{politicalDate,jdbcType=DATE},
            </if>
            <if test="politicLawWorkDate != null">
                #{politicLawWorkDate,jdbcType=DATE},
            </if>
            <if test="administrationPosition != null">
                #{administrationPosition,jdbcType=INTEGER},
            </if>
            <if test="administrationPositionDate != null">
                #{administrationPositionDate,jdbcType=DATE},
            </if>
            <if test="lawPosition != null">
                #{lawPosition,jdbcType=INTEGER},
            </if>
            <if test="lawPositionDate != null">
                #{lawPositionDate,jdbcType=DATE},
            </if>
            <if test="isParttimePresidingJudge != null">
                #{isParttimePresidingJudge,jdbcType=INTEGER},
            </if>
            <if test="partyOffice != null">
                #{partyOffice,jdbcType=INTEGER},
            </if>
            <if test="partyOfficeDate != null">
                #{partyOfficeDate,jdbcType=DATE},
            </if>
            <if test="lawyerDate != null">
                #{lawyerDate,jdbcType=DATE},
            </if>
            <if test="extraSeniority != null">
                #{extraSeniority,jdbcType=INTEGER},
            </if>
            <if test="deductionSeniority != null">
                #{deductionSeniority,jdbcType=INTEGER},
            </if>
            <if test="beforeCourtWorkYear != null">
                #{beforeCourtWorkYear,jdbcType=INTEGER},
            </if>
            <if test="rank != null">
                #{rank,jdbcType=INTEGER},
            </if>
            <if test="rankDate != null">
                #{rankDate,jdbcType=DATE},
            </if>
            <if test="level != null">
                #{level,jdbcType=INTEGER},
            </if>
            <if test="levelDate != null">
                #{levelDate,jdbcType=DATE},
            </if>
            <if test="enterWay != null">
                #{enterWay,jdbcType=INTEGER},
            </if>
            <if test="enterSource != null">
                #{enterSource,jdbcType=INTEGER},
            </if>
            <if test="formerPost != null">
                #{formerPost,jdbcType=INTEGER},
            </if>
            <if test="formerRank != null">
                #{formerRank,jdbcType=INTEGER},
            </if>
            <if test="formerUnit != null">
                #{formerUnit,jdbcType=VARCHAR},
            </if>
            <if test="verifyDate != null">
                #{verifyDate,jdbcType=DATE},
            </if>
            <if test="leaveReason != null">
                #{leaveReason,jdbcType=INTEGER},
            </if>
            <if test="leaveDate != null">
                #{leaveDate,jdbcType=DATE},
            </if>
            <if test="leaveDestination != null">
                #{leaveDestination,jdbcType=INTEGER},
            </if>
            <if test="sortNo != null">
                #{sortNo,jdbcType=INTEGER},
            </if>
            <if test="isValid != null">
                #{isValid,jdbcType=INTEGER},
            </if>
            <if test="additionalDuration != null">
                #{additionalDuration,jdbcType=INTEGER},
            </if>
            <if test="lawyerCertDate != null">
                #{lawyerCertDate,jdbcType=DATE},
            </if>
            <if test="servantLevel != null">
                #{servantLevel,jdbcType=INTEGER},
            </if>
            <if test="servantLevelDate != null">
                #{servantLevelDate,jdbcType=DATE},
            </if>
            <if test="lawyerCert != null">
                #{lawyerCert,jdbcType=INTEGER},
            </if>
            <if test="courtCode != null">
                #{courtCode,jdbcType=VARCHAR},
            </if>
            <if test="orderNo != null">
                #{orderNo,jdbcType=INTEGER},
            </if>
            <if test="courtStdNo != null">
                #{courtStdNo,jdbcType=INTEGER},
            </if>
            <if test="ukNo != null">
                #{ukNo,jdbcType=VARCHAR},
            </if>
            <if test="workNo != null">
                #{workNo,jdbcType=VARCHAR},
            </if>
            <if test="fankaNo != null">
                #{fankaNo,jdbcType=VARCHAR},
            </if>
            <if test="officialNo != null">
                #{officialNo,jdbcType=VARCHAR},
            </if>
            <if test="updateUser != null">
                #{updateUser,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deptOrgCode != null">
                #{deptOrgCode,jdbcType=VARCHAR},
            </if>
            <if test="phoneNumber != null">
                #{phoneNumber,jdbcType=VARCHAR},
            </if>
            <if test="machineNumber != null">
                #{machineNumber,jdbcType=VARCHAR},
            </if>
            <if test="localAddress != null">
                #{localAddress,jdbcType=VARCHAR},
            </if>
            <if test="province != null">
                #{province,jdbcType=INTEGER},
            </if>
            <if test="city != null">
                #{city,jdbcType=INTEGER},
            </if>
            <if test="area != null">
                #{area,jdbcType=INTEGER},
            </if>
            <if test="postalAddress != null">
                #{postalAddress,jdbcType=VARCHAR},
            </if>
            <if test="cPsXlxw != null">
                #{cPsXlxw,jdbcType=INTEGER},
            </if>
            <if test="sPsByyxjzy != null">
                #{sPsByyxjzy,jdbcType=VARCHAR},
            </if>
            <if test="sPsDwdz != null">
                #{sPsDwdz,jdbcType=VARCHAR},
            </if>
            <if test="sPsZw != null">
                #{sPsZw,jdbcType=VARCHAR},
            </if>
            <if test="sPsZj != null">
                #{sPsZj,jdbcType=VARCHAR},
            </if>
            <if test="sPsZyjszw != null">
                #{sPsZyjszw,jdbcType=VARCHAR},
            </if>
            <if test="cPsLx != null">
                #{cPsLx,jdbcType=INTEGER},
            </if>
            <if test="cPsZylb != null">
                #{cPsZylb,jdbcType=INTEGER},
            </if>
            <if test="sPsRmdw != null">
                #{sPsRmdw,jdbcType=VARCHAR},
            </if>
            <if test="sPsRmrq != null">
                #{sPsRmrq,jdbcType=DATE},
            </if>
            <if test="sPsPsybh != null">
                #{sPsPsybh,jdbcType=VARCHAR},
            </if>
            <if test="sPsMzrq != null">
                #{sPsMzrq,jdbcType=DATE},
            </if>
            <if test="cPsMzyy != null">
                #{cPsMzyy,jdbcType=INTEGER},
            </if>
            <if test="ukbm != null">
                #{ukbm,jdbcType=VARCHAR},
            </if>
            <if test="zytc != null">
                #{zytc,jdbcType=VARCHAR},
            </if>
            <if test="sPsZy != null">
                #{sPsZy,jdbcType=VARCHAR},
            </if>
            <if test="beginTime != null">
                #{beginTime,jdbcType=DATE},
            </if>
            <if test="endTime != null">
                #{endTime,jdbcType=DATE},
            </if>
            <if test="isInfoComplete != null">
                #{isInfoComplete,jdbcType=INTEGER},
            </if>
            <if test="salt != null">
                #{salt,jdbcType=VARCHAR},
            </if>
            <if test="dataType != null">
                #{dataType,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="officePhone != null">
                #{officePhone,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="yefg != null">
                #{yefg,jdbcType=INTEGER},
            </if>
            <if test="extOfficePhone != null">
                #{extOfficePhone,jdbcType=VARCHAR},
            </if>
            <if test="extTax != null">
                #{extTax,jdbcType=VARCHAR},
            </if>
            <if test="extAddress != null">
                #{extAddress,jdbcType=VARCHAR},
            </if>
            <if test="extZipCode != null">
                #{extZipCode,jdbcType=VARCHAR},
            </if>
            <if test="bzxx != null">
                #{bzxx,jdbcType=VARCHAR},
            </if>
            <if test="job != null">
                #{job,jdbcType=VARCHAR},
            </if>
            <if test="personnelClassification != null">
                #{personnelClassification,jdbcType=VARCHAR},
            </if>
            <if test="nationReport != null">
                #{nationReport,jdbcType=VARCHAR},
            </if>
            <if test="educationBackgroundReport != null">
                #{educationBackgroundReport,jdbcType=VARCHAR},
            </if>
            <if test="administrationPositionReport != null">
                #{administrationPositionReport,jdbcType=VARCHAR},
            </if>
            <if test="lawPositionReport != null">
                #{lawPositionReport,jdbcType=VARCHAR},
            </if>
            <if test="rankReport != null">
                #{rankReport,jdbcType=VARCHAR},
            </if>
            <if test="politicalReport != null">
                #{politicalReport,jdbcType=VARCHAR},
            </if>
            <if test="partyOfficeReport != null">
                #{partyOfficeReport,jdbcType=VARCHAR},
            </if>
            <if test="bzcy != null">
                #{bzcy,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.net.withub.ums.entity.UmsUserInfoCriteria"
            resultType="java.lang.Integer">
        select count(*) from ums_user_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update ums_user_info
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.courtNo != null">
                court_no = #{record.courtNo,jdbcType=INTEGER},
            </if>
            <if test="record.userNo != null">
                user_no = #{record.userNo,jdbcType=INTEGER},
            </if>
            <if test="record.username != null">
                username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.userCode != null">
                user_code = #{record.userCode,jdbcType=VARCHAR},
            </if>
            <if test="record.userType != null">
                user_type = #{record.userType,jdbcType=INTEGER},
            </if>
            <if test="record.cCodeJg1 != null">
                C_CODE_JG1 = #{record.cCodeJg1,jdbcType=VARCHAR},
            </if>
            <if test="record.cCodeJg2 != null">
                C_CODE_JG2 = #{record.cCodeJg2,jdbcType=VARCHAR},
            </if>
            <if test="record.cCodeJg3 != null">
                C_CODE_JG3 = #{record.cCodeJg3,jdbcType=VARCHAR},
            </if>
            <if test="record.fullname != null">
                fullname = #{record.fullname,jdbcType=VARCHAR},
            </if>
            <if test="record.formerName != null">
                former_name = #{record.formerName,jdbcType=VARCHAR},
            </if>
            <if test="record.gender != null">
                gender = #{record.gender,jdbcType=INTEGER},
            </if>
            <if test="record.department != null">
                department = #{record.department,jdbcType=INTEGER},
            </if>
            <if test="record.unicode != null">
                unicode = #{record.unicode,jdbcType=INTEGER},
            </if>
            <if test="record.positionNature != null">
                position_nature = #{record.positionNature,jdbcType=INTEGER},
            </if>
            <if test="record.hometown != null">
                hometown = #{record.hometown,jdbcType=VARCHAR},
            </if>
            <if test="record.birthplace != null">
                birthplace = #{record.birthplace,jdbcType=VARCHAR},
            </if>
            <if test="record.birthday != null">
                birthday = #{record.birthday,jdbcType=DATE},
            </if>
            <if test="record.physicalCondition != null">
                physical_condition = #{record.physicalCondition,jdbcType=INTEGER},
            </if>
            <if test="record.maritalStatus != null">
                marital_status = #{record.maritalStatus,jdbcType=INTEGER},
            </if>
            <if test="record.nation != null">
                nation = #{record.nation,jdbcType=INTEGER},
            </if>
            <if test="record.idcard != null">
                idcard = #{record.idcard,jdbcType=VARCHAR},
            </if>
            <if test="record.preparation != null">
                preparation = #{record.preparation,jdbcType=INTEGER},
            </if>
            <if test="record.positionType != null">
                position_type = #{record.positionType,jdbcType=INTEGER},
            </if>
            <if test="record.positionTypeDate != null">
                position_type_date = #{record.positionTypeDate,jdbcType=DATE},
            </if>
            <if test="record.assign != null">
                assign = #{record.assign,jdbcType=INTEGER},
            </if>
            <if test="record.educationBackground != null">
                education_background = #{record.educationBackground,jdbcType=INTEGER},
            </if>
            <if test="record.major != null">
                major = #{record.major,jdbcType=INTEGER},
            </if>
            <if test="record.degree != null">
                degree = #{record.degree,jdbcType=INTEGER},
            </if>
            <if test="record.degreeDate != null">
                degree_date = #{record.degreeDate,jdbcType=DATE},
            </if>
            <if test="record.workDate != null">
                work_date = #{record.workDate,jdbcType=DATE},
            </if>
            <if test="record.enterDate != null">
                enter_date = #{record.enterDate,jdbcType=DATE},
            </if>
            <if test="record.proCert != null">
                pro_cert = #{record.proCert,jdbcType=INTEGER},
            </if>
            <if test="record.proCertDate != null">
                pro_cert_date = #{record.proCertDate,jdbcType=DATE},
            </if>
            <if test="record.political != null">
                political = #{record.political,jdbcType=INTEGER},
            </if>
            <if test="record.politicalDate != null">
                political_date = #{record.politicalDate,jdbcType=DATE},
            </if>
            <if test="record.politicLawWorkDate != null">
                politic_law_work_date = #{record.politicLawWorkDate,jdbcType=DATE},
            </if>
            <if test="record.administrationPosition != null">
                administration_position = #{record.administrationPosition,jdbcType=INTEGER},
            </if>
            <if test="record.administrationPositionDate != null">
                administration_position_date = #{record.administrationPositionDate,jdbcType=DATE},
            </if>
            <if test="record.lawPosition != null">
                law_position = #{record.lawPosition,jdbcType=INTEGER},
            </if>
            <if test="record.lawPositionDate != null">
                law_position_date = #{record.lawPositionDate,jdbcType=DATE},
            </if>
            <if test="record.isParttimePresidingJudge != null">
                is_parttime_presiding_judge = #{record.isParttimePresidingJudge,jdbcType=INTEGER},
            </if>
            <if test="record.partyOffice != null">
                party_office = #{record.partyOffice,jdbcType=INTEGER},
            </if>
            <if test="record.partyOfficeDate != null">
                party_office_date = #{record.partyOfficeDate,jdbcType=DATE},
            </if>
            <if test="record.lawyerDate != null">
                lawyer_date = #{record.lawyerDate,jdbcType=DATE},
            </if>
            <if test="record.extraSeniority != null">
                extra_seniority = #{record.extraSeniority,jdbcType=INTEGER},
            </if>
            <if test="record.deductionSeniority != null">
                deduction_seniority = #{record.deductionSeniority,jdbcType=INTEGER},
            </if>
            <if test="record.beforeCourtWorkYear != null">
                before_court_work_year = #{record.beforeCourtWorkYear,jdbcType=INTEGER},
            </if>
            <if test="record.rank != null">
                rank = #{record.rank,jdbcType=INTEGER},
            </if>
            <if test="record.rankDate != null">
                rank_date = #{record.rankDate,jdbcType=DATE},
            </if>
            <if test="record.level != null">
                level = #{record.level,jdbcType=INTEGER},
            </if>
            <if test="record.levelDate != null">
                level_date = #{record.levelDate,jdbcType=DATE},
            </if>
            <if test="record.enterWay != null">
                enter_way = #{record.enterWay,jdbcType=INTEGER},
            </if>
            <if test="record.enterSource != null">
                enter_source = #{record.enterSource,jdbcType=INTEGER},
            </if>
            <if test="record.formerPost != null">
                former_post = #{record.formerPost,jdbcType=INTEGER},
            </if>
            <if test="record.formerRank != null">
                former_rank = #{record.formerRank,jdbcType=INTEGER},
            </if>
            <if test="record.formerUnit != null">
                former_unit = #{record.formerUnit,jdbcType=VARCHAR},
            </if>
            <if test="record.verifyDate != null">
                verify_date = #{record.verifyDate,jdbcType=DATE},
            </if>
            <if test="record.leaveReason != null">
                leave_reason = #{record.leaveReason,jdbcType=INTEGER},
            </if>
            <if test="record.leaveDate != null">
                leave_date = #{record.leaveDate,jdbcType=DATE},
            </if>
            <if test="record.leaveDestination != null">
                leave_destination = #{record.leaveDestination,jdbcType=INTEGER},
            </if>
            <if test="record.sortNo != null">
                sort_no = #{record.sortNo,jdbcType=INTEGER},
            </if>
            <if test="record.isValid != null">
                is_valid = #{record.isValid,jdbcType=INTEGER},
            </if>
            <if test="record.additionalDuration != null">
                additional_duration = #{record.additionalDuration,jdbcType=INTEGER},
            </if>
            <if test="record.lawyerCertDate != null">
                lawyer_cert_date = #{record.lawyerCertDate,jdbcType=DATE},
            </if>
            <if test="record.servantLevel != null">
                servant_level = #{record.servantLevel,jdbcType=INTEGER},
            </if>
            <if test="record.servantLevelDate != null">
                servant_level_date = #{record.servantLevelDate,jdbcType=DATE},
            </if>
            <if test="record.lawyerCert != null">
                lawyer_cert = #{record.lawyerCert,jdbcType=INTEGER},
            </if>
            <if test="record.courtCode != null">
                court_code = #{record.courtCode,jdbcType=VARCHAR},
            </if>
            <if test="record.orderNo != null">
                order_no = #{record.orderNo,jdbcType=INTEGER},
            </if>
            <if test="record.courtStdNo != null">
                court_std_no = #{record.courtStdNo,jdbcType=INTEGER},
            </if>
            <if test="record.ukNo != null">
                uk_no = #{record.ukNo,jdbcType=VARCHAR},
            </if>
            <if test="record.workNo != null">
                work_no = #{record.workNo,jdbcType=VARCHAR},
            </if>
            <if test="record.fankaNo != null">
                fanka_no = #{record.fankaNo,jdbcType=VARCHAR},
            </if>
            <if test="record.officialNo != null">
                official_no = #{record.officialNo,jdbcType=VARCHAR},
            </if>
            <if test="record.updateUser != null">
                update_user = #{record.updateUser,jdbcType=VARCHAR},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.deptOrgCode != null">
                dept_org_code = #{record.deptOrgCode,jdbcType=VARCHAR},
            </if>
            <if test="record.phoneNumber != null">
                phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
            </if>
            <if test="record.machineNumber != null">
                machine_number = #{record.machineNumber,jdbcType=VARCHAR},
            </if>
            <if test="record.localAddress != null">
                local_address = #{record.localAddress,jdbcType=VARCHAR},
            </if>
            <if test="record.province != null">
                province = #{record.province,jdbcType=INTEGER},
            </if>
            <if test="record.city != null">
                city = #{record.city,jdbcType=INTEGER},
            </if>
            <if test="record.area != null">
                area = #{record.area,jdbcType=INTEGER},
            </if>
            <if test="record.postalAddress != null">
                postal_address = #{record.postalAddress,jdbcType=VARCHAR},
            </if>
            <if test="record.cPsXlxw != null">
                c_ps_xlxw = #{record.cPsXlxw,jdbcType=INTEGER},
            </if>
            <if test="record.sPsByyxjzy != null">
                s_ps_byyxjzy = #{record.sPsByyxjzy,jdbcType=VARCHAR},
            </if>
            <if test="record.sPsDwdz != null">
                s_ps_dwdz = #{record.sPsDwdz,jdbcType=VARCHAR},
            </if>
            <if test="record.sPsZw != null">
                s_ps_zw = #{record.sPsZw,jdbcType=VARCHAR},
            </if>
            <if test="record.sPsZj != null">
                s_ps_zj = #{record.sPsZj,jdbcType=VARCHAR},
            </if>
            <if test="record.sPsZyjszw != null">
                s_ps_zyjszw = #{record.sPsZyjszw,jdbcType=VARCHAR},
            </if>
            <if test="record.cPsLx != null">
                c_ps_lx = #{record.cPsLx,jdbcType=INTEGER},
            </if>
            <if test="record.cPsZylb != null">
                c_ps_zylb = #{record.cPsZylb,jdbcType=INTEGER},
            </if>
            <if test="record.sPsRmdw != null">
                s_ps_rmdw = #{record.sPsRmdw,jdbcType=VARCHAR},
            </if>
            <if test="record.sPsRmrq != null">
                s_ps_rmrq = #{record.sPsRmrq,jdbcType=DATE},
            </if>
            <if test="record.sPsPsybh != null">
                s_ps_psybh = #{record.sPsPsybh,jdbcType=VARCHAR},
            </if>
            <if test="record.sPsMzrq != null">
                s_ps_mzrq = #{record.sPsMzrq,jdbcType=DATE},
            </if>
            <if test="record.cPsMzyy != null">
                c_ps_mzyy = #{record.cPsMzyy,jdbcType=INTEGER},
            </if>
            <if test="record.ukbm != null">
                ukbm = #{record.ukbm,jdbcType=VARCHAR},
            </if>
            <if test="record.zytc != null">
                zytc = #{record.zytc,jdbcType=VARCHAR},
            </if>
            <if test="record.sPsZy != null">
                s_ps_zy = #{record.sPsZy,jdbcType=VARCHAR},
            </if>
            <if test="record.beginTime != null">
                begin_time = #{record.beginTime,jdbcType=DATE},
            </if>
            <if test="record.endTime != null">
                end_time = #{record.endTime,jdbcType=DATE},
            </if>
            <if test="record.isInfoComplete != null">
                is_info_complete = #{record.isInfoComplete,jdbcType=INTEGER},
            </if>
            <if test="record.salt != null">
                salt = #{record.salt,jdbcType=VARCHAR},
            </if>
            <if test="record.dataType != null">
                data_type = #{record.dataType,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=VARCHAR},
            </if>
            <if test="record.officePhone != null">
                office_phone = #{record.officePhone,jdbcType=VARCHAR},
            </if>
            <if test="record.phone != null">
                phone = #{record.phone,jdbcType=VARCHAR},
            </if>
            <if test="record.yefg != null">
                yefg = #{record.yefg,jdbcType=INTEGER},
            </if>
            <if test="record.extOfficePhone != null">
                ext_office_phone = #{record.extOfficePhone,jdbcType=VARCHAR},
            </if>
            <if test="record.extTax != null">
                ext_tax = #{record.extTax,jdbcType=VARCHAR},
            </if>
            <if test="record.extAddress != null">
                ext_address = #{record.extAddress,jdbcType=VARCHAR},
            </if>
            <if test="record.extZipCode != null">
                ext_zip_code = #{record.extZipCode,jdbcType=VARCHAR},
            </if>
            <if test="record.bzxx != null">
                bzxx = #{record.bzxx,jdbcType=VARCHAR},
            </if>
            <if test="record.job != null">
                job = #{record.job,jdbcType=VARCHAR},
            </if>
            <if test="record.personnelClassification != null">
                personnel_classification = #{record.personnelClassification,jdbcType=VARCHAR},
            </if>
            <if test="record.nationReport != null">
                nation_report = #{record.nationReport,jdbcType=VARCHAR},
            </if>
            <if test="record.educationBackgroundReport != null">
                education_background_report = #{record.educationBackgroundReport,jdbcType=VARCHAR},
            </if>
            <if test="record.administrationPositionReport != null">
                administration_position_report = #{record.administrationPositionReport,jdbcType=VARCHAR},
            </if>
            <if test="record.lawPositionReport != null">
                law_position_report = #{record.lawPositionReport,jdbcType=VARCHAR},
            </if>
            <if test="record.rankReport != null">
                rank_report = #{record.rankReport,jdbcType=VARCHAR},
            </if>
            <if test="record.politicalReport != null">
                political_report = #{record.politicalReport,jdbcType=VARCHAR},
            </if>
            <if test="record.partyOfficeReport != null">
                party_office_report = #{record.partyOfficeReport,jdbcType=VARCHAR},
            </if>
            <if test="record.bzcy != null">
                bzcy = #{record.bzcy,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update ums_user_info
        set id = #{record.id,jdbcType=VARCHAR},
        court_no = #{record.courtNo,jdbcType=INTEGER},
        user_no = #{record.userNo,jdbcType=INTEGER},
        username = #{record.username,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=VARCHAR},
        user_code = #{record.userCode,jdbcType=VARCHAR},
        user_type = #{record.userType,jdbcType=INTEGER},
        C_CODE_JG1 = #{record.cCodeJg1,jdbcType=VARCHAR},
        C_CODE_JG2 = #{record.cCodeJg2,jdbcType=VARCHAR},
        C_CODE_JG3 = #{record.cCodeJg3,jdbcType=VARCHAR},
        fullname = #{record.fullname,jdbcType=VARCHAR},
        former_name = #{record.formerName,jdbcType=VARCHAR},
        gender = #{record.gender,jdbcType=INTEGER},
        department = #{record.department,jdbcType=INTEGER},
        unicode = #{record.unicode,jdbcType=INTEGER},
        position_nature = #{record.positionNature,jdbcType=INTEGER},
        hometown = #{record.hometown,jdbcType=VARCHAR},
        birthplace = #{record.birthplace,jdbcType=VARCHAR},
        birthday = #{record.birthday,jdbcType=DATE},
        physical_condition = #{record.physicalCondition,jdbcType=INTEGER},
        marital_status = #{record.maritalStatus,jdbcType=INTEGER},
        nation = #{record.nation,jdbcType=INTEGER},
        idcard = #{record.idcard,jdbcType=VARCHAR},
        preparation = #{record.preparation,jdbcType=INTEGER},
        position_type = #{record.positionType,jdbcType=INTEGER},
        position_type_date = #{record.positionTypeDate,jdbcType=DATE},
        assign = #{record.assign,jdbcType=INTEGER},
        education_background = #{record.educationBackground,jdbcType=INTEGER},
        major = #{record.major,jdbcType=INTEGER},
        degree = #{record.degree,jdbcType=INTEGER},
        degree_date = #{record.degreeDate,jdbcType=DATE},
        work_date = #{record.workDate,jdbcType=DATE},
        enter_date = #{record.enterDate,jdbcType=DATE},
        pro_cert = #{record.proCert,jdbcType=INTEGER},
        pro_cert_date = #{record.proCertDate,jdbcType=DATE},
        political = #{record.political,jdbcType=INTEGER},
        political_date = #{record.politicalDate,jdbcType=DATE},
        politic_law_work_date = #{record.politicLawWorkDate,jdbcType=DATE},
        administration_position = #{record.administrationPosition,jdbcType=INTEGER},
        administration_position_date = #{record.administrationPositionDate,jdbcType=DATE},
        law_position = #{record.lawPosition,jdbcType=INTEGER},
        law_position_date = #{record.lawPositionDate,jdbcType=DATE},
        is_parttime_presiding_judge = #{record.isParttimePresidingJudge,jdbcType=INTEGER},
        party_office = #{record.partyOffice,jdbcType=INTEGER},
        party_office_date = #{record.partyOfficeDate,jdbcType=DATE},
        lawyer_date = #{record.lawyerDate,jdbcType=DATE},
        extra_seniority = #{record.extraSeniority,jdbcType=INTEGER},
        deduction_seniority = #{record.deductionSeniority,jdbcType=INTEGER},
        before_court_work_year = #{record.beforeCourtWorkYear,jdbcType=INTEGER},
        rank = #{record.rank,jdbcType=INTEGER},
        rank_date = #{record.rankDate,jdbcType=DATE},
        level = #{record.level,jdbcType=INTEGER},
        level_date = #{record.levelDate,jdbcType=DATE},
        enter_way = #{record.enterWay,jdbcType=INTEGER},
        enter_source = #{record.enterSource,jdbcType=INTEGER},
        former_post = #{record.formerPost,jdbcType=INTEGER},
        former_rank = #{record.formerRank,jdbcType=INTEGER},
        former_unit = #{record.formerUnit,jdbcType=VARCHAR},
        verify_date = #{record.verifyDate,jdbcType=DATE},
        leave_reason = #{record.leaveReason,jdbcType=INTEGER},
        leave_date = #{record.leaveDate,jdbcType=DATE},
        leave_destination = #{record.leaveDestination,jdbcType=INTEGER},
        sort_no = #{record.sortNo,jdbcType=INTEGER},
        is_valid = #{record.isValid,jdbcType=INTEGER},
        additional_duration = #{record.additionalDuration,jdbcType=INTEGER},
        lawyer_cert_date = #{record.lawyerCertDate,jdbcType=DATE},
        servant_level = #{record.servantLevel,jdbcType=INTEGER},
        servant_level_date = #{record.servantLevelDate,jdbcType=DATE},
        lawyer_cert = #{record.lawyerCert,jdbcType=INTEGER},
        court_code = #{record.courtCode,jdbcType=VARCHAR},
        order_no = #{record.orderNo,jdbcType=INTEGER},
        court_std_no = #{record.courtStdNo,jdbcType=INTEGER},
        uk_no = #{record.ukNo,jdbcType=VARCHAR},
        work_no = #{record.workNo,jdbcType=VARCHAR},
        fanka_no = #{record.fankaNo,jdbcType=VARCHAR},
        official_no = #{record.officialNo,jdbcType=VARCHAR},
        update_user = #{record.updateUser,jdbcType=VARCHAR},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        dept_org_code = #{record.deptOrgCode,jdbcType=VARCHAR},
        phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
        machine_number = #{record.machineNumber,jdbcType=VARCHAR},
        local_address = #{record.localAddress,jdbcType=VARCHAR},
        province = #{record.province,jdbcType=INTEGER},
        city = #{record.city,jdbcType=INTEGER},
        area = #{record.area,jdbcType=INTEGER},
        postal_address = #{record.postalAddress,jdbcType=VARCHAR},
        c_ps_xlxw = #{record.cPsXlxw,jdbcType=INTEGER},
        s_ps_byyxjzy = #{record.sPsByyxjzy,jdbcType=VARCHAR},
        s_ps_dwdz = #{record.sPsDwdz,jdbcType=VARCHAR},
        s_ps_zw = #{record.sPsZw,jdbcType=VARCHAR},
        s_ps_zj = #{record.sPsZj,jdbcType=VARCHAR},
        s_ps_zyjszw = #{record.sPsZyjszw,jdbcType=VARCHAR},
        c_ps_lx = #{record.cPsLx,jdbcType=INTEGER},
        c_ps_zylb = #{record.cPsZylb,jdbcType=INTEGER},
        s_ps_rmdw = #{record.sPsRmdw,jdbcType=VARCHAR},
        s_ps_rmrq = #{record.sPsRmrq,jdbcType=DATE},
        s_ps_psybh = #{record.sPsPsybh,jdbcType=VARCHAR},
        s_ps_mzrq = #{record.sPsMzrq,jdbcType=DATE},
        c_ps_mzyy = #{record.cPsMzyy,jdbcType=INTEGER},
        ukbm = #{record.ukbm,jdbcType=VARCHAR},
        zytc = #{record.zytc,jdbcType=VARCHAR},
        s_ps_zy = #{record.sPsZy,jdbcType=VARCHAR},
        begin_time = #{record.beginTime,jdbcType=DATE},
        end_time = #{record.endTime,jdbcType=DATE},
        is_info_complete = #{record.isInfoComplete,jdbcType=INTEGER},
        salt = #{record.salt,jdbcType=VARCHAR},
        data_type = #{record.dataType,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=VARCHAR},
        office_phone = #{record.officePhone,jdbcType=VARCHAR},
        phone = #{record.phone,jdbcType=VARCHAR},
        yefg = #{record.yefg,jdbcType=INTEGER},
        ext_office_phone = #{record.extOfficePhone,jdbcType=VARCHAR},
        ext_tax = #{record.extTax,jdbcType=VARCHAR},
        ext_address = #{record.extAddress,jdbcType=VARCHAR},
        ext_zip_code = #{record.extZipCode,jdbcType=VARCHAR},
        bzxx = #{record.bzxx,jdbcType=VARCHAR},
        job = #{record.job,jdbcType=VARCHAR},
        personnel_classification = #{record.personnelClassification,jdbcType=VARCHAR},
        nation_report = #{record.nationReport,jdbcType=VARCHAR},
        education_background_report = #{record.educationBackgroundReport,jdbcType=VARCHAR},
        administration_position_report = #{record.administrationPositionReport,jdbcType=VARCHAR},
        law_position_report = #{record.lawPositionReport,jdbcType=VARCHAR},
        rank_report = #{record.rankReport,jdbcType=VARCHAR},
        political_report = #{record.politicalReport,jdbcType=VARCHAR},
        party_office_report = #{record.partyOfficeReport,jdbcType=VARCHAR},
        bzcy = #{record.bzcy,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.net.withub.ums.entity.UmsUserInfo">
        update ums_user_info
        <set>
            <if test="courtNo != null">
                court_no = #{courtNo,jdbcType=INTEGER},
            </if>
            <if test="userNo != null">
                user_no = #{userNo,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="userCode != null">
                user_code = #{userCode,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                user_type = #{userType,jdbcType=INTEGER},
            </if>
            <if test="cCodeJg1 != null">
                C_CODE_JG1 = #{cCodeJg1,jdbcType=VARCHAR},
            </if>
            <if test="cCodeJg2 != null">
                C_CODE_JG2 = #{cCodeJg2,jdbcType=VARCHAR},
            </if>
            <if test="cCodeJg3 != null">
                C_CODE_JG3 = #{cCodeJg3,jdbcType=VARCHAR},
            </if>
            <if test="fullname != null">
                fullname = #{fullname,jdbcType=VARCHAR},
            </if>
            <if test="formerName != null">
                former_name = #{formerName,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=INTEGER},
            </if>
            <if test="department != null">
                department = #{department,jdbcType=INTEGER},
            </if>
            <if test="unicode != null">
                unicode = #{unicode,jdbcType=INTEGER},
            </if>
            <if test="positionNature != null">
                position_nature = #{positionNature,jdbcType=INTEGER},
            </if>
            <if test="hometown != null">
                hometown = #{hometown,jdbcType=VARCHAR},
            </if>
            <if test="birthplace != null">
                birthplace = #{birthplace,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=DATE},
            </if>
            <if test="physicalCondition != null">
                physical_condition = #{physicalCondition,jdbcType=INTEGER},
            </if>
            <if test="maritalStatus != null">
                marital_status = #{maritalStatus,jdbcType=INTEGER},
            </if>
            <if test="nation != null">
                nation = #{nation,jdbcType=INTEGER},
            </if>
            <if test="idcard != null">
                idcard = #{idcard,jdbcType=VARCHAR},
            </if>
            <if test="preparation != null">
                preparation = #{preparation,jdbcType=INTEGER},
            </if>
            <if test="positionType != null">
                position_type = #{positionType,jdbcType=INTEGER},
            </if>
            <if test="positionTypeDate != null">
                position_type_date = #{positionTypeDate,jdbcType=DATE},
            </if>
            <if test="assign != null">
                assign = #{assign,jdbcType=INTEGER},
            </if>
            <if test="educationBackground != null">
                education_background = #{educationBackground,jdbcType=INTEGER},
            </if>
            <if test="major != null">
                major = #{major,jdbcType=INTEGER},
            </if>
            <if test="degree != null">
                degree = #{degree,jdbcType=INTEGER},
            </if>
            <if test="degreeDate != null">
                degree_date = #{degreeDate,jdbcType=DATE},
            </if>
            <if test="workDate != null">
                work_date = #{workDate,jdbcType=DATE},
            </if>
            <if test="enterDate != null">
                enter_date = #{enterDate,jdbcType=DATE},
            </if>
            <if test="proCert != null">
                pro_cert = #{proCert,jdbcType=INTEGER},
            </if>
            <if test="proCertDate != null">
                pro_cert_date = #{proCertDate,jdbcType=DATE},
            </if>
            <if test="political != null">
                political = #{political,jdbcType=INTEGER},
            </if>
            <if test="politicalDate != null">
                political_date = #{politicalDate,jdbcType=DATE},
            </if>
            <if test="politicLawWorkDate != null">
                politic_law_work_date = #{politicLawWorkDate,jdbcType=DATE},
            </if>
            <if test="administrationPosition != null">
                administration_position = #{administrationPosition,jdbcType=INTEGER},
            </if>
            <if test="administrationPositionDate != null">
                administration_position_date = #{administrationPositionDate,jdbcType=DATE},
            </if>
            <if test="lawPosition != null">
                law_position = #{lawPosition,jdbcType=INTEGER},
            </if>
            <if test="lawPositionDate != null">
                law_position_date = #{lawPositionDate,jdbcType=DATE},
            </if>
            <if test="isParttimePresidingJudge != null">
                is_parttime_presiding_judge = #{isParttimePresidingJudge,jdbcType=INTEGER},
            </if>
            <if test="partyOffice != null">
                party_office = #{partyOffice,jdbcType=INTEGER},
            </if>
            <if test="partyOfficeDate != null">
                party_office_date = #{partyOfficeDate,jdbcType=DATE},
            </if>
            <if test="lawyerDate != null">
                lawyer_date = #{lawyerDate,jdbcType=DATE},
            </if>
            <if test="extraSeniority != null">
                extra_seniority = #{extraSeniority,jdbcType=INTEGER},
            </if>
            <if test="deductionSeniority != null">
                deduction_seniority = #{deductionSeniority,jdbcType=INTEGER},
            </if>
            <if test="beforeCourtWorkYear != null">
                before_court_work_year = #{beforeCourtWorkYear,jdbcType=INTEGER},
            </if>
            <if test="rank != null">
                rank = #{rank,jdbcType=INTEGER},
            </if>
            <if test="rankDate != null">
                rank_date = #{rankDate,jdbcType=DATE},
            </if>
            <if test="level != null">
                level = #{level,jdbcType=INTEGER},
            </if>
            <if test="levelDate != null">
                level_date = #{levelDate,jdbcType=DATE},
            </if>
            <if test="enterWay != null">
                enter_way = #{enterWay,jdbcType=INTEGER},
            </if>
            <if test="enterSource != null">
                enter_source = #{enterSource,jdbcType=INTEGER},
            </if>
            <if test="formerPost != null">
                former_post = #{formerPost,jdbcType=INTEGER},
            </if>
            <if test="formerRank != null">
                former_rank = #{formerRank,jdbcType=INTEGER},
            </if>
            <if test="formerUnit != null">
                former_unit = #{formerUnit,jdbcType=VARCHAR},
            </if>
            <if test="verifyDate != null">
                verify_date = #{verifyDate,jdbcType=DATE},
            </if>
            <if test="leaveReason != null">
                leave_reason = #{leaveReason,jdbcType=INTEGER},
            </if>
            <if test="leaveDate != null">
                leave_date = #{leaveDate,jdbcType=DATE},
            </if>
            <if test="leaveDestination != null">
                leave_destination = #{leaveDestination,jdbcType=INTEGER},
            </if>
            <if test="sortNo != null">
                sort_no = #{sortNo,jdbcType=INTEGER},
            </if>
            <if test="isValid != null">
                is_valid = #{isValid,jdbcType=INTEGER},
            </if>
            <if test="additionalDuration != null">
                additional_duration = #{additionalDuration,jdbcType=INTEGER},
            </if>
            <if test="lawyerCertDate != null">
                lawyer_cert_date = #{lawyerCertDate,jdbcType=DATE},
            </if>
            <if test="servantLevel != null">
                servant_level = #{servantLevel,jdbcType=INTEGER},
            </if>
            <if test="servantLevelDate != null">
                servant_level_date = #{servantLevelDate,jdbcType=DATE},
            </if>
            <if test="lawyerCert != null">
                lawyer_cert = #{lawyerCert,jdbcType=INTEGER},
            </if>
            <if test="courtCode != null">
                court_code = #{courtCode,jdbcType=VARCHAR},
            </if>
            <if test="orderNo != null">
                order_no = #{orderNo,jdbcType=INTEGER},
            </if>
            <if test="courtStdNo != null">
                court_std_no = #{courtStdNo,jdbcType=INTEGER},
            </if>
            <if test="ukNo != null">
                uk_no = #{ukNo,jdbcType=VARCHAR},
            </if>
            <if test="workNo != null">
                work_no = #{workNo,jdbcType=VARCHAR},
            </if>
            <if test="fankaNo != null">
                fanka_no = #{fankaNo,jdbcType=VARCHAR},
            </if>
            <if test="officialNo != null">
                official_no = #{officialNo,jdbcType=VARCHAR},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deptOrgCode != null">
                dept_org_code = #{deptOrgCode,jdbcType=VARCHAR},
            </if>
            <if test="phoneNumber != null">
                phone_number = #{phoneNumber,jdbcType=VARCHAR},
            </if>
            <if test="machineNumber != null">
                machine_number = #{machineNumber,jdbcType=VARCHAR},
            </if>
            <if test="localAddress != null">
                local_address = #{localAddress,jdbcType=VARCHAR},
            </if>
            <if test="province != null">
                province = #{province,jdbcType=INTEGER},
            </if>
            <if test="city != null">
                city = #{city,jdbcType=INTEGER},
            </if>
            <if test="area != null">
                area = #{area,jdbcType=INTEGER},
            </if>
            <if test="postalAddress != null">
                postal_address = #{postalAddress,jdbcType=VARCHAR},
            </if>
            <if test="cPsXlxw != null">
                c_ps_xlxw = #{cPsXlxw,jdbcType=INTEGER},
            </if>
            <if test="sPsByyxjzy != null">
                s_ps_byyxjzy = #{sPsByyxjzy,jdbcType=VARCHAR},
            </if>
            <if test="sPsDwdz != null">
                s_ps_dwdz = #{sPsDwdz,jdbcType=VARCHAR},
            </if>
            <if test="sPsZw != null">
                s_ps_zw = #{sPsZw,jdbcType=VARCHAR},
            </if>
            <if test="sPsZj != null">
                s_ps_zj = #{sPsZj,jdbcType=VARCHAR},
            </if>
            <if test="sPsZyjszw != null">
                s_ps_zyjszw = #{sPsZyjszw,jdbcType=VARCHAR},
            </if>
            <if test="cPsLx != null">
                c_ps_lx = #{cPsLx,jdbcType=INTEGER},
            </if>
            <if test="cPsZylb != null">
                c_ps_zylb = #{cPsZylb,jdbcType=INTEGER},
            </if>
            <if test="sPsRmdw != null">
                s_ps_rmdw = #{sPsRmdw,jdbcType=VARCHAR},
            </if>
            <if test="sPsRmrq != null">
                s_ps_rmrq = #{sPsRmrq,jdbcType=DATE},
            </if>
            <if test="sPsPsybh != null">
                s_ps_psybh = #{sPsPsybh,jdbcType=VARCHAR},
            </if>
            <if test="sPsMzrq != null">
                s_ps_mzrq = #{sPsMzrq,jdbcType=DATE},
            </if>
            <if test="cPsMzyy != null">
                c_ps_mzyy = #{cPsMzyy,jdbcType=INTEGER},
            </if>
            <if test="ukbm != null">
                ukbm = #{ukbm,jdbcType=VARCHAR},
            </if>
            <if test="zytc != null">
                zytc = #{zytc,jdbcType=VARCHAR},
            </if>
            <if test="sPsZy != null">
                s_ps_zy = #{sPsZy,jdbcType=VARCHAR},
            </if>
            <if test="beginTime != null">
                begin_time = #{beginTime,jdbcType=DATE},
            </if>
            <if test="endTime != null">
                end_time = #{endTime,jdbcType=DATE},
            </if>
            <if test="isInfoComplete != null">
                is_info_complete = #{isInfoComplete,jdbcType=INTEGER},
            </if>
            <if test="salt != null">
                salt = #{salt,jdbcType=VARCHAR},
            </if>
            <if test="dataType != null">
                data_type = #{dataType,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="officePhone != null">
                office_phone = #{officePhone,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="yefg != null">
                yefg = #{yefg,jdbcType=INTEGER},
            </if>
            <if test="extOfficePhone != null">
                ext_office_phone = #{extOfficePhone,jdbcType=VARCHAR},
            </if>
            <if test="extTax != null">
                ext_tax = #{extTax,jdbcType=VARCHAR},
            </if>
            <if test="extAddress != null">
                ext_address = #{extAddress,jdbcType=VARCHAR},
            </if>
            <if test="extZipCode != null">
                ext_zip_code = #{extZipCode,jdbcType=VARCHAR},
            </if>
            <if test="bzxx != null">
                bzxx = #{bzxx,jdbcType=VARCHAR},
            </if>
            <if test="job != null">
                job = #{job,jdbcType=VARCHAR},
            </if>
            <if test="personnelClassification != null">
                personnel_classification = #{personnelClassification,jdbcType=VARCHAR},
            </if>
            <if test="nationReport != null">
                nation_report = #{nationReport,jdbcType=VARCHAR},
            </if>
            <if test="educationBackgroundReport != null">
                education_background_report = #{educationBackgroundReport,jdbcType=VARCHAR},
            </if>
            <if test="administrationPositionReport != null">
                administration_position_report = #{administrationPositionReport,jdbcType=VARCHAR},
            </if>
            <if test="lawPositionReport != null">
                law_position_report = #{lawPositionReport,jdbcType=VARCHAR},
            </if>
            <if test="rankReport != null">
                rank_report = #{rankReport,jdbcType=VARCHAR},
            </if>
            <if test="politicalReport != null">
                political_report = #{politicalReport,jdbcType=VARCHAR},
            </if>
            <if test="partyOfficeReport != null">
                party_office_report = #{partyOfficeReport,jdbcType=VARCHAR},
            </if>
            <if test="bzcy != null">
                bzcy = #{bzcy,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.net.withub.ums.entity.UmsUserInfo">
        update ums_user_info
        set court_no = #{courtNo,jdbcType=INTEGER},
        user_no = #{userNo,jdbcType=INTEGER},
        username = #{username,jdbcType=VARCHAR},
        <!--password = #{password,jdbcType=VARCHAR},编辑时不要改密码-->
        user_code = #{userCode,jdbcType=VARCHAR},
        user_type = #{userType,jdbcType=INTEGER},
        C_CODE_JG1 = #{cCodeJg1,jdbcType=VARCHAR},
        C_CODE_JG2 = #{cCodeJg2,jdbcType=VARCHAR},
        C_CODE_JG3 = #{cCodeJg3,jdbcType=VARCHAR},
        fullname = #{fullname,jdbcType=VARCHAR},
        former_name = #{formerName,jdbcType=VARCHAR},
        gender = #{gender,jdbcType=INTEGER},
        department = #{department,jdbcType=INTEGER},
        unicode = #{unicode,jdbcType=INTEGER},
        position_nature = #{positionNature,jdbcType=INTEGER},
        hometown = #{hometown,jdbcType=VARCHAR},
        birthplace = #{birthplace,jdbcType=VARCHAR},
        birthday = #{birthday,jdbcType=DATE},
        physical_condition = #{physicalCondition,jdbcType=INTEGER},
        marital_status = #{maritalStatus,jdbcType=INTEGER},
        nation = #{nation,jdbcType=INTEGER},
        idcard = #{idcard,jdbcType=VARCHAR},
        preparation = #{preparation,jdbcType=INTEGER},
        position_type = #{positionType,jdbcType=INTEGER},
        position_type_date = #{positionTypeDate,jdbcType=DATE},
        assign = #{assign,jdbcType=INTEGER},
        education_background = #{educationBackground,jdbcType=INTEGER},
        major = #{major,jdbcType=INTEGER},
        degree = #{degree,jdbcType=INTEGER},
        degree_date = #{degreeDate,jdbcType=DATE},
        work_date = #{workDate,jdbcType=DATE},
        enter_date = #{enterDate,jdbcType=DATE},
        pro_cert = #{proCert,jdbcType=INTEGER},
        pro_cert_date = #{proCertDate,jdbcType=DATE},
        political = #{political,jdbcType=INTEGER},
        political_date = #{politicalDate,jdbcType=DATE},
        politic_law_work_date = #{politicLawWorkDate,jdbcType=DATE},
        administration_position = #{administrationPosition,jdbcType=INTEGER},
        administration_position_date = #{administrationPositionDate,jdbcType=DATE},
        law_position = #{lawPosition,jdbcType=INTEGER},
        law_position_date = #{lawPositionDate,jdbcType=DATE},
        is_parttime_presiding_judge = #{isParttimePresidingJudge,jdbcType=INTEGER},
        party_office = #{partyOffice,jdbcType=INTEGER},
        party_office_date = #{partyOfficeDate,jdbcType=DATE},
        lawyer_date = #{lawyerDate,jdbcType=DATE},
        extra_seniority = #{extraSeniority,jdbcType=INTEGER},
        deduction_seniority = #{deductionSeniority,jdbcType=INTEGER},
        before_court_work_year = #{beforeCourtWorkYear,jdbcType=INTEGER},
        rank = #{rank,jdbcType=INTEGER},
        rank_date = #{rankDate,jdbcType=DATE},
        level = #{level,jdbcType=INTEGER},
        level_date = #{levelDate,jdbcType=DATE},
        enter_way = #{enterWay,jdbcType=INTEGER},
        enter_source = #{enterSource,jdbcType=INTEGER},
        former_post = #{formerPost,jdbcType=INTEGER},
        former_rank = #{formerRank,jdbcType=INTEGER},
        former_unit = #{formerUnit,jdbcType=VARCHAR},
        verify_date = #{verifyDate,jdbcType=DATE},
        leave_reason = #{leaveReason,jdbcType=INTEGER},
        leave_date = #{leaveDate,jdbcType=DATE},
        leave_destination = #{leaveDestination,jdbcType=INTEGER},
        sort_no = #{sortNo,jdbcType=INTEGER},
        is_valid = #{isValid,jdbcType=INTEGER},
        additional_duration = #{additionalDuration,jdbcType=INTEGER},
        lawyer_cert_date = #{lawyerCertDate,jdbcType=DATE},
        servant_level = #{servantLevel,jdbcType=INTEGER},
        servant_level_date = #{servantLevelDate,jdbcType=DATE},
        lawyer_cert = #{lawyerCert,jdbcType=INTEGER},
        court_code = #{courtCode,jdbcType=VARCHAR},
        order_no = #{orderNo,jdbcType=INTEGER},
        court_std_no = #{courtStdNo,jdbcType=INTEGER},
        uk_no = #{ukNo,jdbcType=VARCHAR},
        work_no = #{workNo,jdbcType=VARCHAR},
        fanka_no = #{fankaNo,jdbcType=VARCHAR},
        official_no = #{officialNo,jdbcType=VARCHAR},
        update_user = #{updateUser,jdbcType=VARCHAR},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        dept_org_code = #{deptOrgCode,jdbcType=VARCHAR},
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
        machine_number = #{machineNumber,jdbcType=VARCHAR},
        local_address = #{localAddress,jdbcType=VARCHAR},
        province = #{province,jdbcType=INTEGER},
        city = #{city,jdbcType=INTEGER},
        area = #{area,jdbcType=INTEGER},
        postal_address = #{postalAddress,jdbcType=VARCHAR},
        c_ps_xlxw = #{cPsXlxw,jdbcType=INTEGER},
        s_ps_byyxjzy = #{sPsByyxjzy,jdbcType=VARCHAR},
        s_ps_dwdz = #{sPsDwdz,jdbcType=VARCHAR},
        s_ps_zw = #{sPsZw,jdbcType=VARCHAR},
        s_ps_zj = #{sPsZj,jdbcType=VARCHAR},
        s_ps_zyjszw = #{sPsZyjszw,jdbcType=VARCHAR},
        c_ps_lx = #{cPsLx,jdbcType=INTEGER},
        c_ps_zylb = #{cPsZylb,jdbcType=INTEGER},
        s_ps_rmdw = #{sPsRmdw,jdbcType=VARCHAR},
        s_ps_rmrq = #{sPsRmrq,jdbcType=DATE},
        s_ps_psybh = #{sPsPsybh,jdbcType=VARCHAR},
        s_ps_mzrq = #{sPsMzrq,jdbcType=DATE},
        c_ps_mzyy = #{cPsMzyy,jdbcType=INTEGER},
        ukbm = #{ukbm,jdbcType=VARCHAR},
        zytc = #{zytc,jdbcType=VARCHAR},
        s_ps_zy = #{sPsZy,jdbcType=VARCHAR},
        begin_time = #{beginTime,jdbcType=DATE},
        end_time = #{endTime,jdbcType=DATE},
        is_info_complete = #{isInfoComplete,jdbcType=INTEGER},
        <!--salt = #{salt,jdbcType=VARCHAR},编辑时不更新password和salt-->
        data_type = #{dataType,jdbcType=INTEGER},
        user_id = #{userId,jdbcType=VARCHAR},
        office_phone = #{officePhone,jdbcType=VARCHAR},
        phone = #{phone,jdbcType=VARCHAR},
        yefg = #{yefg,jdbcType=INTEGER},
        ext_office_phone = #{extOfficePhone,jdbcType=VARCHAR},
        ext_tax = #{extTax,jdbcType=VARCHAR},
        ext_address = #{extAddress,jdbcType=VARCHAR},
        ext_zip_code = #{extZipCode,jdbcType=VARCHAR},
        bzxx = #{bzxx,jdbcType=VARCHAR},
        job = #{job,jdbcType=VARCHAR},
        personnel_classification = #{personnelClassification,jdbcType=VARCHAR},
        nation_report = #{nationReport,jdbcType=VARCHAR},
        <!--上报字段，页面未显示，直接更新会被设置成null
        education_background_report = #{educationBackgroundReport,jdbcType=VARCHAR},
        administration_position_report = #{administrationPositionReport,jdbcType=VARCHAR},
        law_position_report = #{lawPositionReport,jdbcType=VARCHAR},
        rank_report = #{rankReport,jdbcType=VARCHAR},
        political_report = #{politicalReport,jdbcType=VARCHAR},-->
        party_office_report = #{partyOfficeReport,jdbcType=VARCHAR},
        bzcy = #{bzcy,jdbcType=INTEGER},
        assess_type = #{assessType,jdbcType=INTEGER}
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <!--  该条sql专门为修改密码的-->
    <update id="updateByPrimaryKeyForChangePassword" parameterType="cn.net.withub.ums.entity.UmsUserInfo">
        update ums_user_info
        set password = #{password,jdbcType=VARCHAR},
            salt     = #{salt,jdbcType=VARCHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateForTypeOne" parameterType="cn.net.withub.ums.entity.UmsUserInfo">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update ums_user_info
        set court_no = #{courtNo,jdbcType=INTEGER},
        user_no = #{userNo,jdbcType=INTEGER},
        username = #{username,jdbcType=VARCHAR}


        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updatePolitical" parameterType="cn.net.withub.ums.entity.UmsUserInfo">
        update ums_user_info
        set political        = #{political,jdbcType=INTEGER},
            political_report = #{politicalReport,jdbcType=VARCHAR},
            political_date   = #{politicalDate,jdbcType=DATE}
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updatePresent_info" parameterType="java.util.Map">
        update ums_political_info
        set n_present_info = 1
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updatePresent_infoByuser_id" parameterType="java.util.Map">
        update ums_political_info
        set n_present_info = 2
        where user_id = #{user_id,jdbcType=VARCHAR}
    </update>

    <update id="updateAdministration" parameterType="cn.net.withub.ums.entity.UmsUserInfo">
        update ums_user_info
        set administration_position        = #{administrationPosition,jdbcType=INTEGER},
            administration_position_report = #{administrationPositionReport,jdbcType=VARCHAR},
            administration_position_date   = #{administrationPositionDate,jdbcType=DATE}
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updatePresent_info_adm" parameterType="java.util.Map">
        update ums_administrative_job
        set n_present_info = 1
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updatePresent_info_adm_Byuser_id" parameterType="java.util.Map">
        update ums_administrative_job
        set n_present_info = 2
        where user_id = #{user_id,jdbcType=VARCHAR}
    </update>
    <update id="updatePresent_info_law" parameterType="java.util.Map">
        update ums_legal_job
        set n_present_info = 1
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updatePresent_info_law_Byuser_id" parameterType="java.util.Map">
        update ums_legal_job
        set n_present_info = 2
        where user_id = #{user_id,jdbcType=VARCHAR}
    </update>
    <update id="updateRank" parameterType="cn.net.withub.ums.entity.UmsUserInfo">
        update ums_user_info
        set rank        = #{rank,jdbcType=INTEGER},
            rank_report = #{rankReport,jdbcType=VARCHAR},
            rank_date   = #{rankDate,jdbcType=DATE}
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updatePresent_info_rank" parameterType="java.util.Map">
        update ums_rank_info
        set n_present_info = 1
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updatePresent_info_rank_Byuser_id" parameterType="java.util.Map">
        update ums_rank_info
        set n_present_info = 2
        where user_id = #{user_id,jdbcType=VARCHAR}
    </update>

    <update id="updateLevel" parameterType="cn.net.withub.ums.entity.UmsUserInfo">
        update ums_user_info
        set level      = #{level,jdbcType=INTEGER},
            level_date = #{levelDate,jdbcType=DATE}
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updatePresent_info_level" parameterType="java.util.Map">
        update ums_level_info
        set n_present_info = 1
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updatePresent_info_level_Byuser_id" parameterType="java.util.Map">
        update ums_level_info
        set
        n_present_info = 2
        where user_id = #{user_id,jdbcType=VARCHAR}
        <if test="helper_level == 1">
            and helper_level is not null and helper_level != ''
        </if>
        <if test="helper_level == 0">
            and (helper_level is null or helper_level = '')
        </if>
    </update>

    <update id="updateServant_level" parameterType="cn.net.withub.ums.entity.UmsUserInfo">
        update ums_user_info
        set servant_level      = #{servantLevel,jdbcType=INTEGER},
            servant_level_date = #{servantLevelDate,jdbcType=DATE}
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updatePresent_info_servant_level" parameterType="java.util.Map">
        update ums_civil_servant_level
        set n_present_info = 1
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updatePresent_info_servant_level_Byuser_id" parameterType="java.util.Map">
        update ums_civil_servant_level
        set n_present_info = 2
        where user_id = #{user_id,jdbcType=VARCHAR}
    </update>
    <update id="updatePresentInfoByUserId" parameterType="java.util.Map">
        update ${table}
        set
        n_present_info = 2
        where user_id = #{userId,jdbcType=VARCHAR}
        <!--<if test="nLevelType !=null and nLevelType !=''">-->
        <!--and n_level_type = #{nLevelType,jdbcType=INTEGER}-->
        <!--</if>-->
    </update>
    <update id="updatePresentInfoById" parameterType="java.util.Map">
        update ${table}
        set n_present_info = 1
        where id = #{id,jdbcType=VARCHAR}
    </update>


    <!--追加的查询方法-->

    <select id="search_virtualUser" parameterType="java.util.Map" resultType="java.util.HashMap">
        SELECT *
        from ums_user_virtual
        where VU_USERCODE = #{VU_USERCODE}
          AND VU_PASSWORD = #{VU_PASSWORD}
          AND COURT_STD_CODE = #{COURT_STD_CODE}
    </select>

    <select id="search_user_by_loginInfo" parameterType="java.util.Map" resultType="java.util.HashMap">
        select * from ums_user_info where username = #{USERNAME} and court_no = #{COURT_STD_NO}
        <if test="ISVALID != null">
            and is_valid = #{ISVALID}
        </if>
    </select>

    <!--查询条件只为是否有同名的,不加法院等其他限制条件-->
    <select id="search_user_by_loginInfo_2" parameterType="java.util.Map" resultType="java.util.HashMap">
        select *
        from ums_user_info
        where username = #{USERNAME}
    </select>

    <!--编辑时,除自己外,是否与重复的username-->
    <select id="search_user_by_loginInfo_userinfo" parameterType="java.util.Map" resultType="java.util.HashMap">
        select *
        from ums_user_info
        where username = #{USERNAME}
          and id != #{id}
          and is_valid = 1
    </select>

    <!--编辑时,查询该username,是否等于自己-->
    <select id="search_user_by_loginInfo_userinfo_2" parameterType="java.util.Map" resultType="java.util.HashMap">
        select *
        from ums_user_info
        where username = #{USERNAME}
          and id = #{id}
    </select>

    <update id="update_virtualUser_password" parameterType="java.util.Map">
        update ums_user_virtual
        set VU_PASSWORD = #{VU_PASSWORD}
        where ID = #{ID}
    </update>

    <select id="searchVirtualUserByID" parameterType="java.lang.String" resultType="java.util.HashMap">
        SELECT *
        from ums_user_virtual
        where ID = #{ID}
    </select>

    <update id="updateEnabled" parameterType="cn.net.withub.ums.entity.UmsUserInfo">
        update ums_user_info
        <set>
            <if test="isValid != null">
                is_valid = #{isValid},
            </if>
            <if test="leaveReason != null">
                <choose>
                    <when test="leaveReason == -1">
                        leave_reason = null,
                    </when>
                    <otherwise>
                        leave_reason = #{leaveReason,jdbcType=INTEGER},
                    </otherwise>
                </choose>
            </if>
            <if test="leaveDate != null ">
                leave_date = #{leaveDate,jdbcType=DATE},
            </if>
            <if test="leaveDate == null ">
                leave_date = null ,
            </if>
            <if test="leaveDestination != null">
                <choose>
                    <when test="leaveDestination == -1">
                        leave_destination = null,
                    </when>
                    <otherwise>
                        leave_destination = #{leaveDestination,jdbcType=INTEGER},
                    </otherwise>
                </choose>
            </if>
            <if test="c_ps_mzyy == -1 ">
                c_ps_mzyy = null,
            </if>
            <if test="userType != null ">
                user_type = #{userType},
            </if>
        </set>
        where id = #{id}
    </update>
    <insert id="insertJobById" parameterType="cn.net.withub.ums.entity.UmsChangeJob">
        insert into ums_change_user_job (changeUUID, user_id, user_name, old_court_no, old_court_text,
                                         old_dep_no, old_dep_text, new_court_std_no, new_court_code, new_dept_org_code,
                                         new_court_no, new_court_text, new_dept_no, new_dept_text, apply_user_id,
                                         apply_user_name, apply_time, update_user_id, update_user_name, update_time,
                                         update_reason,
                                         apply_court_no, state, changeJobReason)
        values (#{changeUUID,jdbcType=VARCHAR}, #{user_id,jdbcType=VARCHAR}, #{user_name,jdbcType=VARCHAR},
                #{old_court_no,jdbcType=INTEGER}, #{old_court_text,jdbcType=VARCHAR}, #{old_dep_no,jdbcType=INTEGER},
                #{old_dep_text,jdbcType=VARCHAR}, #{new_court_std_no,jdbcType=INTEGER},
                #{new_court_code,jdbcType=VARCHAR}, #{new_dept_org_code,jdbcType=VARCHAR},
                #{new_court_no,jdbcType=INTEGER}, #{new_court_text,jdbcType=VARCHAR},
                #{new_dept_no,jdbcType=INTEGER}, #{new_dept_text,jdbcType=VARCHAR},
                #{apply_user_id,jdbcType=VARCHAR}, #{apply_user_name,jdbcType=VARCHAR},
                now(), #{update_user_id,jdbcType=VARCHAR}, #{update_user_name,jdbcType=VARCHAR},
                #{update_time,jdbcType=TIMESTAMP}, #{update_reason,jdbcType=VARCHAR},
                #{old_court_no,jdbcType=INTEGER}, #{state,jdbcType=VARCHAR}, #{changeJobReason,jdbcType=VARCHAR})
    </insert>
    <select id="selectChangeJob" parameterType="cn.net.withub.ums.entity.UmsChangeJob"
            resultType="cn.net.withub.ums.entity.UmsChangeJob">
        SELECT * FROM ums_change_user_job where 1=1
        <if test="user_id  != null and user_id !=''">
            and user_id = #{user_id} and state='申请中'
        </if>
        <if test="old_court_no != null and old_court_no !=''">
            and apply_court_no = #{old_court_no}
        </if>
        <if test="user_name !=null and user_name !=''">
            and user_name like '%${user_name}%'
        </if>
        order by apply_time DESC
    </select>
    <select id="countChangeJob" parameterType="cn.net.withub.ums.entity.UmsChangeJob" resultType="java.lang.Integer">
        SELECT count(*) FROM ums_change_user_job where 1=1
        <if test="user_id  != null and user_id !=''">
            and user_id = #{user_id} and state='申请中'
        </if>
        <if test="old_court_no != null and old_court_no !=''">
            and apply_court_no = #{old_court_no}
        </if>
        <if test="user_name !=null and user_name !=''">
            and user_name like '%${user_name}%'
        </if>
        <if test="state != null and state != '' ">
            and state = #{state}
        </if>
    </select>
    <update id="updateJobById" parameterType="cn.net.withub.ums.entity.UmsChangeJob">
        update ums_change_user_job
        set state           = #{state}
          , update_time= now()
          , update_user_id=#{update_user_id}
          , update_user_name=#{update_user_name}
          , update_reason=#{update_reason}
        where changeUUID = #{changeUUID}
    </update>
    <!--更新另外两张表的数据-->
    <!--<update id="updateXtptAndInfo" parameterType="cn.net.withub.ums.entity.UmsChangeJob">-->
        <!--UPDATE ums_user_info a,xtpt_t_user b-->
        <!--set a.court_no     = #{new_court_no},-->
            <!--a.department=#{new_dept_no},-->
            <!--a.court_code=#{new_court_code},-->
            <!--a.court_std_no=#{new_court_std_no},-->
            <!--a.dept_org_code=#{new_dept_org_code},-->
            <!--a.user_type=a.user_type + 10,-->
            <!--b.court_code=#{new_court_code},-->
            <!--b.court_std_no=#{new_court_std_no},-->
            <!--b.dept_no=#{new_dept_no},-->
            <!--b.court_no=#{new_court_no},-->
            <!--b.dept_org_code=#{new_dept_org_code},-->
            <!--b.user_type=b.user_type + 10-->
        <!--where a.id = b.uuid-->
          <!--and b.uuid = #{user_id}-->
    <!--</update>-->

    <update id="updateUmsUserInfo" parameterType="cn.net.withub.ums.entity.UmsChangeJob">
        MERGE INTO ums_user_info
        USING xtpt_t_user
        ON (ums_user_info.id = xtpt_t_user.uuid)
        WHEN MATCHED THEN
        UPDATE SET
        ums_user_info.court_no = #{new_court_no},
        ums_user_info.department = #{new_dept_no},
        ums_user_info.court_code = #{new_court_code},
        ums_user_info.court_std_no = #{new_court_std_no},
        ums_user_info.dept_org_code = #{new_dept_org_code},
        ums_user_info.user_type = ums_user_info.user_type + 10
        WHERE xtpt_t_user.uuid = #{user_id}
    </update>

    <update id="updateXtptInfo" parameterType="cn.net.withub.ums.entity.UmsChangeJob">
        UPDATE xtpt_t_user SET
        court_code = #{new_court_code},
        court_std_no = #{new_court_std_no},
        dept_no = #{new_dept_no},
        court_no = #{new_court_no},
        dept_org_code = #{new_dept_org_code},
        user_type = user_type + 10
        WHERE uuid = #{user_id}
    </update>

    <update id="updateUserInfo" parameterType="cn.net.withub.ums.entity.UmsUserInfo">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update ums_user_info
        set court_no = #{courtNo,jdbcType=INTEGER},
        username = #{username,jdbcType=VARCHAR},
        user_code = #{userCode,jdbcType=VARCHAR},
        user_type = #{userType,jdbcType=INTEGER},
        fullname = #{fullname,jdbcType=VARCHAR},
        former_name = #{formerName,jdbcType=VARCHAR},
        gender = #{gender,jdbcType=INTEGER},
        department = #{department,jdbcType=INTEGER},
        hometown = #{hometown,jdbcType=VARCHAR},
        birthplace = #{birthplace,jdbcType=VARCHAR},
        birthday = #{birthday,jdbcType=DATE},
        physical_condition = #{physicalCondition,jdbcType=INTEGER},
        marital_status = #{maritalStatus,jdbcType=INTEGER},
        nation = #{nation,jdbcType=INTEGER},
        idcard = #{idcard,jdbcType=VARCHAR},
        preparation = #{preparation,jdbcType=INTEGER},
        position_type = #{positionType,jdbcType=INTEGER},
        position_type_date = #{positionTypeDate,jdbcType=DATE},
        assign = #{assign,jdbcType=INTEGER},
        education_background = #{educationBackground,jdbcType=INTEGER},
        major = #{major,jdbcType=INTEGER},
        degree = #{degree,jdbcType=INTEGER},
        degree_date = #{degreeDate,jdbcType=DATE},
        work_date = #{workDate,jdbcType=DATE},
        enter_date = #{enterDate,jdbcType=DATE},
        pro_cert = #{proCert,jdbcType=INTEGER},
        pro_cert_date = #{proCertDate,jdbcType=DATE},
        political = #{political,jdbcType=INTEGER},
        political_date = #{politicalDate,jdbcType=DATE},
        politic_law_work_date = #{politicLawWorkDate,jdbcType=DATE},
        administration_position = #{administrationPosition,jdbcType=INTEGER},
        administration_position_date = #{administrationPositionDate,jdbcType=DATE},
        law_position = #{lawPosition,jdbcType=INTEGER},
        law_position_date = #{lawPositionDate,jdbcType=DATE},
        is_parttime_presiding_judge = #{isParttimePresidingJudge,jdbcType=INTEGER},
        party_office = #{partyOffice,jdbcType=INTEGER},
        party_office_date = #{partyOfficeDate,jdbcType=DATE},
        lawyer_date = #{lawyerDate,jdbcType=DATE},
        extra_seniority = #{extraSeniority,jdbcType=INTEGER},
        deduction_seniority = #{deductionSeniority,jdbcType=INTEGER},
        before_court_work_year = #{beforeCourtWorkYear,jdbcType=INTEGER},
        rank = #{rank,jdbcType=INTEGER},
        rank_date = #{rankDate,jdbcType=DATE},
        level = #{level,jdbcType=INTEGER},
        level_date = #{levelDate,jdbcType=DATE},
        enter_way = #{enterWay,jdbcType=INTEGER},
        enter_source = #{enterSource,jdbcType=INTEGER},
        former_post = #{formerPost,jdbcType=INTEGER},
        former_rank = #{formerRank,jdbcType=INTEGER},
        former_unit = #{formerUnit,jdbcType=VARCHAR},
        verify_date = #{verifyDate,jdbcType=DATE},
        leave_reason = #{leaveReason,jdbcType=INTEGER},
        leave_date = #{leaveDate,jdbcType=DATE},
        leave_destination = #{leaveDestination,jdbcType=INTEGER},
        sort_no = #{sortNo,jdbcType=INTEGER},
        additional_duration = #{additionalDuration,jdbcType=INTEGER},
        lawyer_cert_date = #{lawyerCertDate,jdbcType=DATE},
        servant_level = #{servantLevel,jdbcType=INTEGER},
        servant_level_date = #{servantLevelDate,jdbcType=DATE},
        lawyer_cert = #{lawyerCert,jdbcType=INTEGER},
        court_code = #{courtCode,jdbcType=VARCHAR},
        court_std_no = #{courtStdNo,jdbcType=INTEGER},
        uk_no = #{ukNo,jdbcType=VARCHAR},
        work_no = #{workNo,jdbcType=VARCHAR},
        fanka_no = #{fankaNo,jdbcType=VARCHAR},
        official_no = #{officialNo,jdbcType=VARCHAR},
        update_user = #{updateUser,jdbcType=VARCHAR},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        dept_org_code = #{deptOrgCode,jdbcType=VARCHAR},
        is_valid = #{isValid,jdbcType=INTEGER},
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
        machine_number = #{machineNumber,jdbcType=VARCHAR},
        local_address = #{localAddress,jdbcType=VARCHAR},
        postal_address = #{postalAddress,jdbcType=VARCHAR},
        c_ps_xlxw=#{c_ps_xlxw,jdbcType=INTEGER},
        s_ps_byyxjzy= #{s_ps_byyxjzy,jdbcType=VARCHAR},
        s_ps_dwdz= #{s_ps_dwdz,jdbcType=VARCHAR},
        s_ps_zw=#{s_ps_zw,jdbcType=VARCHAR},
        s_ps_zj=#{s_ps_zj,jdbcType=VARCHAR},
        s_ps_zyjszw=#{s_ps_zyjszw,jdbcType=VARCHAR},
        c_ps_lx= #{c_ps_lx,jdbcType=INTEGER},
        c_ps_zylb=#{c_ps_zylb,jdbcType=INTEGER},
        s_ps_rmdw=#{s_ps_rmdw,jdbcType=VARCHAR},
        s_ps_psybh=#{s_ps_psybh,jdbcType=VARCHAR},

        c_ps_mzyy=#{c_ps_mzyy,jdbcType=INTEGER},
        ukbm=#{ukbm,jdbcType=VARCHAR},
        zytc=#{zytc,jdbcType=VARCHAR},
        s_ps_zy=#{s_ps_zy,jdbcType=VARCHAR},
        begin_time=#{begin_time,jdbcType=DATE},
        end_time=#{end_time,jdbcType=DATE},
        yefg=#{yefg,jdbcType=INTEGER},
        bzxx=#{bzxx,jdbcType=VARCHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <update id="updateTime" parameterType="cn.net.withub.ums.entity.UmsUserInfo">
        update ums_user_info
        set update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <select id="selectAll" parameterType="java.util.Map" resultMap="BaseResultMap">
        <if test="courtLevel != null">
            SELECT * from (
        </if>
        SELECT
        gender,nation,political,
        (SELECT DATE_FORMAT(NOW(), '%Y') - DATE_FORMAT(birthday, '%Y') - (DATE_FORMAT(NOW(), '00-%m-%d') &lt;
        DATE_FORMAT(birthday, '00-%m-%d'))) AS user_no,
        education_background,pro_cert,law_position,administration_position,personnel_classification,dept_org_code,
        (select court_gradation from ums_court_full WHERE court_no=a.court_no) as level
        FROM ums_user_info a
        WHERE is_valid=1 and user_type=1
        <if test="courtCode != null">
            AND a.court_code = #{courtCode}
        </if>
        <if test="preparation != null">
            <choose>
                <when test="preparation == 1">
                    AND a.preparation = 1
                </when>
                <when test="preparation == 2">
                    AND(a.preparation in(2,4,5,8) or a.preparation is null)
                </when>
                <when test="preparation == 3">
                    AND a.preparation = 3
                </when>
                <otherwise>
                </otherwise>
            </choose>
        </if>
        <if test="courtLevel != null">
            ) b where b.level = #{courtLevel}
        </if>
    </select>
    <!--&lt;select id="selectPersonGroupBydept"  parameterType="java.util.Map" resultType="java.util.HashMap"&gt;
        select c.court_gradation AS level,b.dept_name AS deptName,b.org_code AS orgCode,count(*) as count_ from system_platform.ums_user_info a,system_platform.ums_department b,system_platform.ums_court_full c
        where 1=1
        &lt;if test="preparation != null"&gt;
            &lt;choose&gt;
                &lt;when test="preparation == 1"&gt;
                    AND a.preparation = 1
                &lt;/when&gt;
                &lt;when test="preparation == 2"&gt;
                    AND(a.preparation = 4 OR a.preparation = 5)
                &lt;/when&gt;
                &lt;when test="preparation == 3"&gt;
                    AND a.preparation = 3
                &lt;/when&gt;
                &lt;otherwise&gt;
                &lt;/otherwise&gt;
            &lt;/choose&gt;
        &lt;/if&gt;
        &lt;if test="courtCode != null"&gt;
            AND b.court_code=#{courtCode}
        &lt;/if&gt;
        &lt;if test="courtLevel != null "&gt;
            and c.court_gradation=#{courtLevel}
        &lt;/if&gt;
        and a.department = b.dept_no and a.court_code = b.court_code and a.court_code = c.court_code
        and a.is_valid = 1 and a.user_type = 1
        group by c.court_gradation,b.dept_name,b.org_code
    &lt;/select&gt;-->

    <!--<update id="updateXtptAndUserDeptCode" parameterType="java.util.Map">-->
        <!--UPDATE ums_user_info a,xtpt_t_user b-->
        <!--set a.dept_org_code=#{newDept},-->
        <!--b.dept_org_code=#{newDept}-->
        <!--where a.id = b.uuid-->
        <!--and a.court_no = #{court_no}-->
        <!--and a.department = #{dept_no}-->
    <!--</update>-->

    <update id="updateUserDeptCode" parameterType="java.util.Map">
        MERGE INTO ums_user_info
        USING xtpt_t_user
        ON (ums_user_info.id = xtpt_t_user.uuid)
        WHEN MATCHED THEN
        UPDATE SET ums_user_info.dept_org_code=#{newDept}
        WHERE ums_user_info.court_no = #{court_no}
        AND ums_user_info.department = #{dept_no}
    </update>

    <update id="updateXtptDeptCode" parameterType="java.util.Map">
        MERGE INTO xtpt_t_user
        USING ums_user_info
        ON (ums_user_info.id = xtpt_t_user.uuid)
        WHEN MATCHED THEN
        UPDATE SET xtpt_t_user.dept_org_code=#{newDept}
        WHERE ums_user_info.court_no = #{court_no}
        AND ums_user_info.department = #{dept_no}
    </update>

    <select id="customSearch" parameterType="java.util.Map" resultType="java.util.HashMap">
        select ifnull(${leftColumn},'') as leftId,ifnull(${topColumn},'') as topId,count(*) as coutNum from
        ums_user_info a,ums_court_full b where a.court_code = b.court_code
        <if test="courtLevel != null">
            and b.court_gradation = #{courtLevel}
        </if>
        <if test="fydmList != null">
            and b.court_code in
            <foreach close=")" collection="fydmList" index="index" item="item" open="(" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="userType != null">
            and user_type = #{userType}
        </if>
        <if test="userType == null">
            and user_type = 1
            and IFNULL(leave_reason ,'') = ''
        </if>
        <if test="preparation != null">
            and preparation = #{preparation}
        </if>
        <if test="otherParam != null">
            ${otherParam}
        </if>
        and a.is_valid = 1
        group by ${leftColumn},${topColumn}
    </select>
    <select id="customSearchForBw" parameterType="java.util.Map" resultType="java.util.HashMap">
        SELECT
        ifnull(${leftColumn},'') as leftId,ifnull(${topColumn},'') as topId,count(*) as coutNum
        FROM
        (
        select a.*,b.court_std_name,b.court_short_name,c.enter_src,c.company_info_id
        from ums_user_info a
        LEFT JOIN ums_court_full b on a.court_code = b.court_code
        LEFT JOIN ums_external_user_info c on a.id = c.user_id
        <where>
            <if test="courtLevel != null">
                and b.court_gradation = #{courtLevel}
            </if>
            <if test="fydmList != null">
                and b.court_code in
                <foreach close=")" collection="fydmList" index="index" item="item" open="(" separator=",">
                    #{item}
                </foreach>
            </if>
            and a.user_type = 2
            and a.is_valid = 1
        </where>

        ) e
        group by ${leftColumn},${topColumn}
    </select>
    <select id="customSearchForPsy" parameterType="java.util.Map" resultType="java.util.HashMap">
        SELECT
        ifnull(${leftColumn},'') as leftId,ifnull(${topColumn},'') as topId,count(*) as coutNum
        FROM
        (
        select a.*,b.court_std_name,b.court_short_name,c.juror_work,c.member_state
        from ums_user_info a
        LEFT JOIN ums_court_full b on a.court_code = b.court_code
        LEFT JOIN ums_juror_info c on a.id = c.user_id
        <where>
            <if test="courtLevel != null">
                and b.court_gradation = #{courtLevel}
            </if>
            <if test="fydmList != null">
                and b.court_code in
                <foreach close=")" collection="fydmList" index="index" item="item" open="(" separator=",">
                    #{item}
                </foreach>
            </if>
            and a.user_type = 3
            and a.is_valid = 1
        </where>

        ) e
        group by ${leftColumn},${topColumn}
    </select>
    <select id="cunstomSearch_nnd" parameterType="java.util.Map" resultType="java.util.HashMap">
        SELECT
        <foreach close=" WHEN (age is null or age = '' or age &lt; 1 or age &gt; 70) THEN '' END,'other') as leftId," collection="nndList" index="index" item="item" open="IFNULL(CASE"
                 separator="">
            <![CDATA[
          WHEN age >= #{item.start} AND age <= #{item.end} THEN #{item.name}
        ]]>
        </foreach>
        IFNULL(${topColumn},'') as topId,
        count(*) as coutNum
        FROM
        (
        SELECT
        <![CDATA[
            YEAR (now()) - YEAR (c.birthday) - IF( DATE_FORMAT(NOW(), '%m%d') < DATE_FORMAT(c.birthday, '%m%d'), 1, 0 ) AS age,
        ]]>
        c.*
        FROM
        ums_user_info c,ums_court_full b where c.court_code = b.court_code
        <if test="courtLevel != null">
            and b.court_gradation = #{courtLevel}
        </if>
        <if test="fydmList != null">
            and b.court_code in
            <foreach close=")" collection="fydmList" index="index" item="item" open="(" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="userType != null">
            and user_type = #{userType}
        </if>
        <if test="userType == null">
            and user_type = 1
            and IFNULL(leave_reason ,'') = ''
        </if>
        <if test="preparation != null">
            and preparation = #{preparation}
        </if>
        <if test="otherParam != null">
            ${otherParam}
        </if>
        and c.is_valid = 1
        ) a
        GROUP BY
        age,
        ${topColumn}
    </select>
    <select id="customSearchForAgeBw" parameterType="java.util.Map" resultType="java.util.HashMap">
        SELECT
        <foreach close=" WHEN (age is null or age = '' or age &lt; 1 or age &gt; 70) THEN '' END,'other') as leftId," collection="nndList" index="index" item="item" open="IFNULL(CASE"
                 separator="">
            <![CDATA[
          WHEN age >= #{item.start} AND age <= #{item.end} THEN #{item.name}
        ]]>
        </foreach>
        IFNULL(${topColumn},'') as topId,
        count(*) as coutNum
        FROM
        (
        SELECT
        <![CDATA[
            YEAR (now()) - YEAR (c.birthday) - IF( DATE_FORMAT(NOW(), '%m%d') < DATE_FORMAT(c.birthday, '%m%d'), 1, 0 ) AS age,
        ]]>
        c.*,b.court_std_name,b.court_short_name,e.enter_src,e.company_info_id
        from ums_user_info c
        LEFT JOIN ums_court_full b on c.court_code = b.court_code
        LEFT JOIN ums_external_user_info e on e.user_id = c.id
        <where>
            <if test="courtLevel != null">
                and b.court_gradation = #{courtLevel}
            </if>
            <if test="fydmList != null">
                and b.court_code in
                <foreach close=")" collection="fydmList" index="index" item="item" open="(" separator=",">
                    #{item}
                </foreach>
            </if>
            and c.user_type = 2 and c.is_valid = 1

        </where>

        ) a
        GROUP BY
        age,
        ${topColumn}
    </select>

    <select id="customSearchForAgePsy" parameterType="java.util.Map" resultType="java.util.HashMap">
        SELECT
        <foreach close=" WHEN (age is null or age = '' or age &lt; 1 or age &gt; 70) THEN '' END,'other') as leftId," collection="nndList" index="index" item="item" open="IFNULL(CASE"
                 separator="">
            <![CDATA[
          WHEN age >= #{item.start} AND age <= #{item.end} THEN #{item.name}
        ]]>
        </foreach>
        IFNULL(${topColumn},'') as topId,
        count(*) as coutNum
        FROM
        (
        SELECT
        <![CDATA[
            YEAR (now()) - YEAR (c.birthday) - IF( DATE_FORMAT(NOW(), '%m%d') < DATE_FORMAT(c.birthday, '%m%d'), 1, 0 ) AS age,
        ]]>
        c.*,b.court_std_name,b.court_short_name,e.juror_work,e.member_state
        from ums_user_info c
        LEFT JOIN ums_court_full b on c.court_code = b.court_code
        LEFT JOIN ums_juror_info e on e.user_id = c.id
        <where>
            <if test="courtLevel != null">
                and b.court_gradation = #{courtLevel}
            </if>
            <if test="fydmList != null">
                and b.court_code in
                <foreach close=")" collection="fydmList" index="index" item="item" open="(" separator=",">
                    #{item}
                </foreach>
            </if>
            and c.user_type = 3 and c.is_valid = 1

        </where>

        ) a
        GROUP BY
        age,
        ${topColumn}
    </select>

    <select id="customSearch_avgnnd" parameterType="java.util.Map" resultType="java.util.HashMap">
        <![CDATA[
        SELECT round(avg(age), 0) a, IFNULL(${topColumn}, '') as topId
        FROM (SELECT YEAR(now()) - YEAR(c.birthday) -
                     IF(DATE_FORMAT(NOW(), '%m%d') < DATE_FORMAT(c.birthday, '%m%d'), 1, 0) AS age,
                     c.*
              FROM ums_user_info_view c,
                   ums_court_full b
              where c.court_code = b.court_code
                and user_type = 1
                and c.is_valid = 1) a
        GROUP BY ${topColumn};
        ]]>
  </select>
    <update id="updateUserIndexBatch1" parameterType="java.util.Map">
        <![CDATA[
        update system_platform.ums_user_info a
        set a.sort_no=a.sort_no + 1
        where a.user_type = #{userType}
          and a.court_no = #{courtNo}
          and a.department = #{deptNo}
          and (a.is_info_complete IS NULL OR a.is_info_complete <> 1)
          and a.is_valid = 1
          and a.sort_no >= #{sortNo}
          and a.leave_reason IS NULL
        ]]>
    </update>

    <update id="updateUserIndexBatch2" parameterType="java.util.Map">
        <![CDATA[
        update system_platform.ums_user_info a
        set a.sort_no=a.sort_no + 1
        where a.user_type = #{userType}
          and a.court_no = #{courtNo}
          and a.department = #{deptNo}
          and (a.is_info_complete IS NULL OR a.is_info_complete <> 1)
          and a.is_valid = 1
          and a.sort_no > #{sortNo}
          and a.leave_reason IS NULL
        ]]>
    </update>

    <select id="selectUserInWhere1" parameterType="java.util.Map" resultMap="BaseResultMap">
         <![CDATA[
        SELECT *
        FROM system_platform.ums_user_info a
        where a.user_type = #{userType}
          and a.court_no = #{courtNo}
          and a.department = #{deptNo}
          and (a.is_info_complete IS NULL OR a.is_info_complete <> 1)
          and a.is_valid = 1
          and a.sort_no >= #{sortNo}
          and a.leave_reason IS NULL
        ]]>
    </select>

    <select id="selectUserInWhere2" parameterType="java.util.Map" resultMap="BaseResultMap">
        <![CDATA[
        SELECT *
        FROM system_platform.ums_user_info a
        where a.user_type = #{userType}
          and a.court_no = #{courtNo}
          and a.department = #{deptNo}
          and (a.is_info_complete IS NULL OR a.is_info_complete <> 1)
          and a.is_valid = 1
          and a.sort_no > #{sortNo}
          and a.leave_reason IS NULL
        ]]>
    </select>


    <!--  部门按标准部门编码进行分组，报表按法院进行分组，分别统计刑事、民事、执行、立案、行政 部门下各院法官人数-->
    <select id="countYefgGroupbyDept" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
               --a.court_code,
               count(*)
        FROM ums_user_info_view a
        WHERE a.user_type = 1
          AND a.is_valid = 1
          <if test='deptName != null and deptName != ""'>
          AND a.dept_org_code IN
              (SELECT org_code FROM xtpt_bm_departement WHERE dept_name LIKE concat('%', '${deptName}', '%'))
          </if>
          AND (
                a.yefg = 1
                OR EXISTS(
                        SELECT 1
                        FROM ums_level_info
                        WHERE a.id = ums_level_info.user_id
                          AND ums_level_info.n_level_type = 1
                          AND ums_level_info.n_present_info = 1
                          AND ums_level_info.is_yefg = 1
                    )
            )
        <if test='authcourt != null and authcourt != ""'>
            ${authcourt}
        </if>
        <if test='groupBy != null and groupBy != ""'>
            GROUP BY ${groupBy}
        </if>
    </select>

    <!--  入额法官数量-->
    <select id="countyefg" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT IFNULL(${leftColumn}, '') AS leftId,
               'yefg'                    AS topId,
               COUNT(*)                  AS coutNum
        FROM ums_user_info a
        WHERE a.is_valid = 1
          AND a.user_type = 1
          AND (a.yefg = 1 OR EXISTS(SELECT 1
                                    FROM ums_level_info b
                                    WHERE a.id = b.user_id
                                      AND a.court_no = b.court_no
                                      AND b.n_present_info = 1
                                      AND b.is_yefg = 1))
          AND EXISTS(SELECT 1
                     FROM ums_level_info b
                     WHERE a.id = b.user_id
                       AND a.court_no = b.court_no
                       AND b.yefg_start_time BETWEEN #{startDate} AND #{endDate}
                       AND b.n_present_info = 1
                       AND IFNULL(b.yefg_end_reason, '') = ''
                       AND IFNULL(b.yefg_end_time, '') = '')
            ${authcourt}
        GROUP BY
            a.court_code
    </select>

    <!--  退额法官数量-->
    <select id="counttefg" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT ifnull(${leftColumn}, '') AS leftId,
               'tefg'                    AS topId,
               COUNT(*)                  AS coutNum
        FROM ums_user_info a
        WHERE a.user_type = 1
          AND a.is_valid = 1
          AND (IFNULL(a.yefg, '') != 1 OR EXISTS(SELECT 1
                                                 FROM ums_level_info b
                                                 WHERE a.id = b.user_id
                                                   AND a.court_no = b.court_no
                                                   AND b.n_level_type = 1
                                                   AND b.n_present_info = 1
                                                   AND IFNULL(b.is_yefg, 0) != 1))
          AND EXISTS(SELECT 1
                     FROM ums_level_info b
                     WHERE a.id = b.user_id
                       AND a.court_no = b.court_no
                       AND b.yefg_end_time BETWEEN #{startDate} AND #{endDate}
                       AND b.n_present_info = 1
                       AND IFNULL(b.yefg_end_reason, '') != ''
                       AND IFNULL(b.yefg_end_time, '') != '')
            ${authcourt}
        GROUP BY
            a.court_code
    </select>

    <!--  各个法官登记数量-->
    <select id="countEveryFg" parameterType="java.util.Map" resultType="java.util.Map">

        SELECT IFNULL(${leftColumn}, '') AS leftId,
               IFNULL(${topColumn}, '')  AS topId,
               COUNT(a.id)               AS coutNum
        FROM (
            SELECT u.*,temp.judge_level FROM (
            SELECT c.id,
            b.judge_level
            FROM ums_user_info c,
            ums_level_info b
            WHERE c.id = b.user_id
            AND c.court_no = b.court_no
            AND c.user_type = 1
            AND c.is_valid = 1
            AND b.n_present_info = 1
            GROUP BY c.id,b.judge_level
            ) AS temp LEFT JOIN ums_user_info AS u ON temp.id = u.id
        ) a
        WHERE 1 = 1
          AND (
                a.yefg = 1
                OR EXISTS(
                        SELECT 1
                        FROM ums_level_info b
                        WHERE a.id = b.user_id
                          AND a.court_no = b.court_no
                          AND b.n_present_info = 1
                          AND b.is_yefg = 1
                          AND IFNULL(b.yefg_end_reason, '') = ''
                          AND IFNULL(b.yefg_end_time, '') = ''
                    )
            )
          AND EXISTS(
                SELECT 1
                FROM ums_level_info b
                WHERE a.id = b.user_id
                  AND a.court_no = b.court_no
                  AND b.yefg_start_time BETWEEN #{startDate}
                    AND #{endDate}
                  AND b.n_present_info = 1
                  AND IFNULL(b.yefg_end_reason, '') = ''
                  AND IFNULL(b.yefg_end_time, '') = ''
            )
            ${authcourt}
        GROUP BY
            a.court_code,
            a.judge_level

    </select>

    <!--  各个退额法官登记数量-->
    <select id="countEveryTeFg" parameterType="java.util.Map" resultType="java.util.Map">

        SELECT IFNULL(${leftColumn}, '') AS leftId,
               IFNULL(${topColumn}, '')  AS topId,
               COUNT(a.id)               AS coutNum
        FROM (
            SELECT u.*,temp.judge_level FROM (
            SELECT c.id,
            b.judge_level
            FROM ums_user_info c,
            ums_level_info b
            WHERE c.id = b.user_id
            AND c.court_no = b.court_no
            AND c.user_type = 1
            AND c.is_valid = 1
            AND b.n_present_info = 1
            GROUP BY c.id,b.judge_level
            ) AS temp LEFT JOIN ums_user_info AS u ON temp.id = u.id
        ) a
        WHERE 1 = 1
          AND (IFNULL(a.yefg, '') != 1 OR EXISTS(SELECT 1
                                                 FROM ums_level_info b
                                                 WHERE a.id = b.user_id
                                                   AND a.court_no = b.court_no
                                                   AND b.n_level_type = 1
                                                   AND b.n_present_info = 1
                                                   AND IFNULL(b.is_yefg, 0) != 1))
          AND EXISTS(SELECT 1
                     FROM ums_level_info b
                     WHERE a.id = b.user_id
                       AND a.court_no = b.court_no
                       AND b.yefg_end_time BETWEEN #{startDate} AND #{endDate}
                       AND b.n_present_info = 1
                       AND IFNULL(b.yefg_end_reason, '') != ''
                       AND IFNULL(b.yefg_end_time, '') != '')
            ${authcourt}
        GROUP BY
            a.court_code,
            a.judge_level

    </select>


  <update id="updatePresent_info_education" parameterType="java.util.Map">
        update ums_education_info
        set
            n_present_info   = 1
        where id = #{id,jdbcType=VARCHAR}
    </update>

  <update id="updatePresent_info_education_Byuser_id" parameterType="java.util.Map">
        update ums_education_info
        set
            n_present_info   =  2
        where user_id = #{user_id,jdbcType=VARCHAR}
    </update>
  <update id="updateEducation" parameterType="cn.net.withub.ums.entity.UmsUserInfo">
        update ums_user_info
        set
            education_background = #{educationBackground,jdbcType=INTEGER},
            education_background_report = #{educationBackgroundReport,jdbcType=VARCHAR},
            major = #{major}
        where id = #{id,jdbcType=VARCHAR}
    </update>
  <update id="updatePresent_info_degree" parameterType="java.util.Map">
        update ums_degree_info
        set
            n_present_info   = 1
        where id = #{id,jdbcType=VARCHAR}
    </update>

  <update id="updatePresent_info_degree_Byuser_id" parameterType="java.util.Map">
        update ums_degree_info
        set
            n_present_info   =  2
        where user_id = #{user_id,jdbcType=VARCHAR}
    </update>

</mapper>