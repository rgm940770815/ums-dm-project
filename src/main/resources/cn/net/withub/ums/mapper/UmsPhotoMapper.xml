<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.net.withub.ums.dao.UmsPhotoMapper">
    <resultMap id="BaseResultMap" type="cn.net.withub.ums.entity.UmsPhoto">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="court_no" property="courtNo" jdbcType="INTEGER"/>
        <result column="user_no" property="userNo" jdbcType="INTEGER"/>
        <result column="court_code" property="courtCode" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="cn.net.withub.ums.entity.UmsPhoto" extends="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <result column="photo" property="photo" jdbcType="LONGVARBINARY"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        user_id, court_no, user_no, court_code
    </sql>
    <sql id="Blob_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        photo
    </sql>
    <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs"
            parameterType="cn.net.withub.ums.entity.UmsPhotoCriteria">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from ums_photo
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.net.withub.ums.entity.UmsPhotoCriteria">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from ums_photo
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from ums_photo
        where user_id = #{userId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from ums_photo
        where user_id = #{userId,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="cn.net.withub.ums.entity.UmsPhotoCriteria">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from ums_photo
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.net.withub.ums.entity.UmsPhoto">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into ums_photo (user_id, court_no, user_no,
        court_code, photo)
        values (#{userId,jdbcType=VARCHAR}, #{courtNo,jdbcType=INTEGER}, #{userNo,jdbcType=INTEGER},
        #{courtCode,jdbcType=VARCHAR}, #{photo,jdbcType=LONGVARBINARY})
    </insert>
    <insert id="insertSelective" parameterType="cn.net.withub.ums.entity.UmsPhoto">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into ums_photo
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="courtNo != null">
                court_no,
            </if>
            <if test="userNo != null">
                user_no,
            </if>
            <if test="courtCode != null">
                court_code,
            </if>
            <if test="photo != null">
                photo,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="courtNo != null">
                #{courtNo,jdbcType=INTEGER},
            </if>
            <if test="userNo != null">
                #{userNo,jdbcType=INTEGER},
            </if>
            <if test="courtCode != null">
                #{courtCode,jdbcType=VARCHAR},
            </if>
            <if test="photo != null">
                #{photo,jdbcType=LONGVARBINARY},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.net.withub.ums.entity.UmsPhotoCriteria"
            resultType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from ums_photo
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update ums_photo
        <set>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=VARCHAR},
            </if>
            <if test="record.courtNo != null">
                court_no = #{record.courtNo,jdbcType=INTEGER},
            </if>
            <if test="record.userNo != null">
                user_no = #{record.userNo,jdbcType=INTEGER},
            </if>
            <if test="record.courtCode != null">
                court_code = #{record.courtCode,jdbcType=VARCHAR},
            </if>
            <if test="record.photo != null">
                photo = #{record.photo,jdbcType=LONGVARBINARY},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update ums_photo
        set user_id = #{record.userId,jdbcType=VARCHAR},
        court_no = #{record.courtNo,jdbcType=INTEGER},
        user_no = #{record.userNo,jdbcType=INTEGER},
        court_code = #{record.courtCode,jdbcType=VARCHAR},
        photo = #{record.photo,jdbcType=LONGVARBINARY}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update ums_photo
        set user_id = #{record.userId,jdbcType=VARCHAR},
        court_no = #{record.courtNo,jdbcType=INTEGER},
        user_no = #{record.userNo,jdbcType=INTEGER},
        court_code = #{record.courtCode,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.net.withub.ums.entity.UmsPhoto">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update ums_photo
        <set>
            <if test="courtNo != null">
                court_no = #{courtNo,jdbcType=INTEGER},
            </if>
            <if test="userNo != null">
                user_no = #{userNo,jdbcType=INTEGER},
            </if>
            <if test="courtCode != null">
                court_code = #{courtCode,jdbcType=VARCHAR},
            </if>
            <if test="photo != null">
                photo = #{photo,jdbcType=LONGVARBINARY},
            </if>
        </set>
        where user_id = #{userId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.net.withub.ums.entity.UmsPhoto">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update ums_photo
        set court_no = #{courtNo,jdbcType=INTEGER},
        user_no = #{userNo,jdbcType=INTEGER},
        court_code = #{courtCode,jdbcType=VARCHAR},
        photo = #{photo,jdbcType=LONGVARBINARY}
        <if test="lastModified != null" >
            , last_modified = #{lastModified, jdbcType=TIMESTAMP}
        </if>
        where user_id = #{userId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.net.withub.ums.entity.UmsPhoto">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update ums_photo
        set court_no = #{courtNo,jdbcType=INTEGER},
        user_no = #{userNo,jdbcType=INTEGER},
        court_code = #{courtCode,jdbcType=VARCHAR}
        where user_id = #{userId,jdbcType=VARCHAR}
    </update>

    <select id="selectIsValidUser" resultType="java.lang.String" >
        SELECT p.user_id from ums_photo as p ,ums_user_info as u
        where p.user_id= u.id and
        u.is_valid = 1 and u.user_type = 1
  </select>

    <select id="selectByDept"  resultType="java.util.Map"  parameterType="java.util.Map">
        SELECT
        photo,user_id,(SELECT fullname from ums_user_info where id = ums_photo.user_id) as name
        from  ums_photo where EXISTS(
        SELECT 1 from  ums_user_info where user_type = 1 and is_valid = 1 and court_no = #{courtNo,jdbcType=INTEGER}
        and department = #{department,jdbcType=INTEGER} and id = ums_photo.user_id
        )
    </select>
</mapper>
